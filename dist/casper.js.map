{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eth/sc.js","webpack:///./src/index.js","webpack:///./src/neo/sc.js","webpack:///./src/promise.js","webpack:///./src/requestAdapter/browser.js","webpack:///./src/requestAny.js","webpack:///./src/utils/crypto/bs58.js","webpack:///./src/utils/crypto/hex.js","webpack:///./src/utils/file/browser.js","webpack:///./src/utils/utils.js","webpack:///external \"js-sha256\""],"names":["require","parseSCString","uuidToHash","nodeIdToBytes","entropy","SC_INTERFACE","SC_ADDR","development","production","sc","getSC","eth","mode","pair","Contract","push","getUploadNodes","fileSize","Promise","resolve","reject","methods","getPeers","call","then","nodeIds","Object","values","data","all","map","getNodeAddr","id","ip","ipPort","replace","ipfs","hash","catch","nodes","filter","node","getStoringNodes","uuid","fileHash","showStoringPeers","nodeHashes","ipPorts","module","exports","scEth","scNeo","CasperPromise","requestAny","utils","REST_PORT","neo","Casper","api","blockchain","detectBlockchain","Error","blockchainAPI","file","emit","isFile","TypeError","getFileSize","ips","x","peers","headers","JSON","stringify","method","url","on","event","parse","UUID","encoding","sharingNode","path","neoDecode","RPC_ADDR","script","createScript","scriptHash","operation","args","rpc","Query","invokeScript","execute","result","res","stack","value","length","String","slice","u","hexstring2str","substr","cb","subscribers","message","forEach","realResolve","realReject","hijackControls","p","bind","makeRequest","triggerAbort","promise","handleProgress","done","loaded","total","form","FormData","key","append","req","XMLHttpRequest","responseType","upload","onprogress","onload","response","onerror","err","open","header","setRequestHeader","send","abort","request","hostWorthTrying","host","rejected","canceled","config","hosts","abortRequest","championHost","setChampion","progressHost","assign","possibleIps","A","bs58","decode","d","b","i","j","c","n","S","indexOf","Uint8Array","encode","s","B","toBytes","bytes","hex","parseInt","substring","Blob","size","sha256","val","codes","fromCharCode","apply","code","sha","base58","Math","round","random","neoDecodeOne","type","Number","reverseHex","desiredTypes","results","Array","isArray","idx","sign","CONST","NEO_NETWORK"],"mappings":"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","file":"casper.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { parseSCString, uuidToHash, nodeIdToBytes, entropy } = require('../utils') \r\n\r\nconst SC_INTERFACE = require('./sc.abi.json')\r\nconst SC_ADDR = {\r\n  development: 'b4854255e34a089FBae02709A35ddc854D238d0C',\r\n  production:  'ff89Eb252F1E9C6638823C819DC0b2Ce3bFae7F5'\r\n}\r\nconst sc = {\r\n  development: [],\r\n  production: []\r\n}\r\nconst getSC = (eth, mode) => {\r\n  // initiing casper-sc is somewhat pricy, so we try to get it from cache\r\n  for(let pair of sc[mode]) {\r\n    if(pair.eth === eth) return pair.sc\r\n  }\r\n\r\n  // conneced to another web3 instance or created for the first time\r\n  const pair = { eth, sc: new eth.Contract(SC_INTERFACE, SC_ADDR[mode]) }\r\n  sc[mode].push(pair)\r\n\r\n  return pair.sc\r\n}\r\n\r\n\r\nconst getUploadNodes = (eth, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n  sc.methods.getPeers(fileSize, entropy()).call()\r\n    .then(data => {\r\n      const nodeIds = Object.values(data)\r\n\r\n      return Promise.all(\r\n        nodeIds.map(id => new Promise((resolve, reject) =>\r\n          sc.methods.getNodeAddr(id)\r\n            .call()\r\n            .then(ipPort => resolve({\r\n              ip: ipPort[0].replace(/:.*/, ''), // removing thrift port\r\n              ipfs: ipPort[1],\r\n              hash: nodeIdToBytes(id)\r\n            }))\r\n            .catch(reject)\r\n        ))\r\n      )\r\n    })\r\n    .then(nodes => nodes.filter(node => node.ip))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nconst getStoringNodes = (eth, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n\r\n  const fileHash = uuidToHash(uuid)\r\n  sc.methods.showStoringPeers(fileHash).call()\r\n    .then(data => {\r\n      const nodeHashes = Object.values(data)\r\n\r\n      return Promise.all(\r\n        nodeHashes.map(node => sc.methods.getNodeAddr(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.filter(ipPort => ipPort[0]))\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort[0].replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","// we use commonsjs for node export\r\nconst scEth = require('./eth/sc')\r\nconst scNeo = require('./neo/sc')\r\nconst CasperPromise = require('./promise')\r\nconst requestAny = require('./requestAny')\r\nconst utils = require('./utils')\r\n\r\n\r\nconst REST_PORT = 5001\r\nconst sc = {\r\n  eth: scEth,\r\n  neo: scNeo\r\n}\r\n\r\n\r\nclass Casper {\r\n  constructor(api, { blockchain, mode='development' } = {}) {\r\n    blockchain = blockchain ? blockchain : utils.detectBlockchain(api)\r\n    if(typeof blockchain === 'undefined') {\r\n      throw new Error('casperapi: Unsupported blockchain api, use web3 / web3-eth / neon-js')\r\n    }\r\n\r\n    this.blockchain = blockchain\r\n    this.mode = mode\r\n    if(this.blockchain === 'eth') this.blockchainAPI = api.eth || api\r\n    else this.blockchainAPI = api\r\n  }\r\n\r\n  /**\r\n   * Writes file into casper storage.\r\n   * If uuid is present file is overwritten\r\n   * @param {(Blob | Buffer | stream.Readable)} file\r\n   * @param {String} uuid file's unique id (from previous upload)\r\n   * @return {CasperPromise} resolves with uuid\r\n   */\r\n  save(file, uuid = false) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      if( ! utils.isFile(file)) {\r\n        throw new TypeError('casperapi: file type must be File | Blob | Buffer | stream.Readable')\r\n      }\r\n\r\n      utils.getFileSize(file)\r\n        .then(fileSize => {\r\n          return sc[this.blockchain].getUploadNodes(this.blockchainAPI, { fileSize, mode: this.mode })\r\n        })\r\n        .then(nodes => {\r\n          emit('sc-connected')\r\n\r\n          const ips = nodes.map(x => x.ip)\r\n          const peers = nodes.map(x => `${x.ipfs}/ipfs/${x.hash}`)\r\n          const headers = {\r\n            'X-Peers': JSON.stringify(peers)\r\n          }\r\n\r\n          let method, url\r\n          if(uuid) {\r\n            // Update\r\n            method = 'PUT'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`\r\n          } else {\r\n            // Save new\r\n            method = 'POST'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file`\r\n          }\r\n\r\n          requestAny(method, url, ips, { file, headers })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(data => {\r\n              resolve(JSON.parse(data).UUID)\r\n            })\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Deletes file from casper storage.\r\n   * @param {String} uuid file's unique id (returned from upload)\r\n   * @return {CasperPromise} resolves with void\r\n   */\r\n  delete(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('DELETE', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips)\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets file from casper storage.\r\n   * @param {String} uuid file's unique id (from upload)\r\n   * @return {CasperPromise} resolves with Blob | Buffer, after the whole file is downloaded\r\n   */\r\n  getFile(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          return ips\r\n        })\r\n        .then(ips => {\r\n          requestAny('GET', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips, { encoding: null })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates http link that allows to work with file the usual web way\r\n   * @param {String} uuid file's unique id (from upload)\r\n   */\r\n  getLink(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      let sharingNode = ''\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('POST', `http://{host}:${REST_PORT}/casper/v0/share/${uuid}`, ips)\r\n            .on('new-champion', ip => sharingNode = ip)\r\n            .then(path => resolve(\r\n              `http://${sharingNode}:${REST_PORT}${path}`\r\n            ))\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = Casper\r\n","const { uuidToHash, nodeIdToBytes, entropy, neoDecode } = require('../utils') \r\n\r\nconst SC_ADDR = {\r\n  development: 'afbbe56378cd68fe045463bd5e3a2978f0ff37bb',\r\n  production:  'ff89Eb252F1E9C6638823C819DC0b2Ce3bFae7F5'\r\n}\r\n\r\nconst RPC_ADDR = {\r\n  development: 'http://195.201.96.242:30333',\r\n  production:  'http://195.201.96.242:30333'\r\n}\r\n\r\nconst getUploadNodes = (neo, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const script = neo.sc.createScript({\r\n    scriptHash: SC_ADDR[mode],\r\n    operation: 'getpeers',\r\n    args: [fileSize, 1]\r\n  })\r\n\r\n  neo.rpc.Query.invokeScript(script)\r\n    .execute(RPC_ADDR[mode])\r\n    .then(res => {\r\n      const result = res.result.stack[0].value\r\n      const nodeIds = result.filter(x => x.value.length).map(x => x.value)\r\n      return nodeIds\r\n    })\r\n    .then(nodeIds => Promise.all(\r\n      nodeIds.map(id => {\r\n        const script = neo.sc.createScript({\r\n          scriptHash: SC_ADDR[mode],\r\n          operation: 'getinfo',\r\n          args: [id]\r\n        })\r\n\r\n        return neo.rpc.Query.invokeScript(script)\r\n          .execute(RPC_ADDR[mode])\r\n          .then(res => {\r\n            const result = res.result.stack[0].value\r\n            const [ip, ipfs] = neoDecode(neo, [String, String], result.slice(2))\r\n            return {\r\n              ip: ip.replace(/:.*/, ''),\r\n              ipfs,\r\n              hash: neo.u.hexstring2str(id)\r\n            }\r\n          })\r\n      }\r\n    )))\r\n    .then(resolve)\r\n})\r\n\r\nconst getStoringNodes = (neo, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const fileHash = uuidToHash(uuid)\r\n  const script = neo.sc.createScript({\r\n    scriptHash: SC_ADDR[mode],\r\n    operation: 'getstoringpeers',\r\n    args: [fileHash.substr(2)] // neo dislikes 0x\r\n  })\r\n\r\n\r\n  neo.rpc.Query.invokeScript(script)\r\n    .execute(RPC_ADDR[mode])\r\n    .then(res => {\r\n      const result = res.result.stack[0].value\r\n      const nodeIds = result.filter(x => x.value.length).map(x => x.value)\r\n      return nodeIds\r\n    })\r\n    .then(nodeIds => Promise.all(\r\n      nodeIds.map(id => {\r\n        const script = neo.sc.createScript({\r\n          scriptHash: SC_ADDR[mode],\r\n          operation: 'getinfo',\r\n          args: [id]\r\n        })\r\n\r\n        return neo.rpc.Query.invokeScript(script)\r\n          .execute(RPC_ADDR[mode])\r\n          .then(res => neoDecode(String, res.result.stack[0].value[2]))\r\n      }\r\n    )))\r\n    .then(ips => ips.filter(ip => ip.length))\r\n    .then(ips => ips.map(ip => ip.replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","function on(event, cb) {\r\n  if(!this.subscribers[event]) this.subscribers[event] = []\r\n  this.subscribers[event].push(cb)\r\n  return this\r\n}\r\n\r\n\r\nfunction emit(event, message) {\r\n  if(this.subscribers[event]) this.subscribers[event].forEach(cb => cb(message))\r\n}\r\n\r\n\r\nfunction CasperPromise(cb) {\r\n  let realResolve\r\n  let realReject\r\n\r\n  const hijackControls = (resolve, reject) => {\r\n    realResolve = resolve\r\n    realReject = reject\r\n  }\r\n\r\n  let p = new Promise(hijackControls)\r\n\r\n  p.subscribers = {}\r\n  p.emit = emit.bind(p)\r\n  p.on = on.bind(p)\r\n\r\n  cb(realResolve, realReject, p.emit)\r\n  return p\r\n}\r\n\r\nmodule.exports = CasperPromise","const CasperPromise = require('../promise')\r\n\r\n\r\nconst makeRequest = ({\r\n  method = 'GET',\r\n  url,\r\n  data = {},\r\n  file,\r\n  headers = {},\r\n  encoding\r\n}) => {\r\n  let triggerAbort\r\n\r\n  const promise = CasperPromise((resolve, reject, emit) => {\r\n    // helpers\r\n    const handleProgress = event => {\r\n      const done = event.loaded / event.total\r\n      if(done && 0 < done && done <= 1) emit('progress', done)\r\n    }\r\n    \r\n    // preparation\r\n    const form = new FormData()\r\n    for(let key in data) {\r\n      form.append(key, data[key])\r\n    }\r\n    if(file) form.append('file', file)\r\n\r\n\r\n    // dispatching request\r\n    const req = new XMLHttpRequest()\r\n    if(encoding === null) req.responseType = 'blob'\r\n    \r\n    if(file) {\r\n      req.upload.onprogress = handleProgress\r\n    } else {\r\n      req.onprogress = handleProgress\r\n    }\r\n  \r\n    req.onload = event => resolve(req.response)\r\n    req.onerror = err => reject(err)\r\n\r\n    req.open(method, url)\r\n    for(let header in headers) {\r\n      req.setRequestHeader(header, headers[header])\r\n    }\r\n    req.send(form)\r\n\r\n    // providing abort feature\r\n    triggerAbort = req.abort.bind(req)\r\n  })\r\n\r\n  promise.abort = triggerAbort\r\n  return promise\r\n}\r\n\r\n\r\nmodule.exports = makeRequest","const request = require('./requestAdapter')\r\nconst CasperPromise = require('./promise')\r\n\r\n\r\nconst hostWorthTrying = host => ( ! host.rejected) || host.canceled\r\n\r\n\r\nconst requestAny = (\r\n  method, url,\r\n  ips,\r\n  config = {}\r\n) => CasperPromise((resolve, reject, emit) => {\r\n  ips = ips.filter(ip => ip !== '0.0.0.0')\r\n  if(ips.length === 0) reject(new Error('casperapi: No hosts to handle request'))\r\n  \r\n  // preparation\r\n  const hosts = ips.map(ip => ({\r\n    ip,\r\n    rejected: false,\r\n    canceled: false,\r\n    abortRequest: null\r\n  }))\r\n\r\n  let championHost = ''\r\n\r\n  const setChampion = host => {\r\n    championHost = host\r\n    emit('new-champion', host.ip)\r\n  }\r\n\r\n  const handleProgress = progressHost => event => {\r\n    if( ! championHost) setChampion(progressHost)\r\n\r\n    hosts\r\n      .filter(host => host !== championHost)\r\n      .map(host => host.abortRequest())\r\n\r\n    if(progressHost === championHost) {\r\n      emit('progress', event)\r\n    }\r\n  }\r\n\r\n\r\n  // dispatching requests\r\n  hosts.forEach(host => {\r\n    // would introcduce babel later\r\n    const req = request(Object.assign({}, config, {\r\n      method,\r\n      url: url.replace('{host}', host.ip),\r\n    }))\r\n    host.abortRequest = req.abort\r\n\r\n    req\r\n      .on('progress', handleProgress(host))\r\n      .then(response => {\r\n        // avoiding multiple resolves\r\n        if( ! championHost) setChampion(host)\r\n        if(host === championHost) resolve(response)\r\n      })\r\n      .catch(err => {\r\n        // console.log('Host err', err, host)\r\n        host.rejected = true\r\n\r\n        if(host === championHost) {\r\n          // trying other requests that didn't fail\r\n          const possibleIps = hosts\r\n                                .filter(hostWorthTrying)\r\n                                .map(host => host.ip)\r\n\r\n\r\n          requestAny(method, url, possibleIps, config)\r\n            .on('progress', done => emit('progress', done))\r\n            .on('new-champion', ip => emit('new-champion', ip))\r\n            .then(resolve)\r\n            .catch(err => {\r\n              reject(new Error('casperapi: All hosts are unreachable'))\r\n            })\r\n        } else if(hosts.filter(hostWorthTrying).length === 0) {\r\n          reject(new Error('casperapi: All hosts are unreachable'))\r\n        }\r\n      })\r\n  })\r\n})\r\n\r\n\r\nmodule.exports = requestAny\r\n","const A = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\nconst bs58 = {}\r\n\r\nbs58.decode = S => {\r\n  let d = [],   //the array for storing the stream of decoded bytes\r\n      b = [],   //the result byte array that will be returned\r\n      i,        //the iterator variable for the base58 string\r\n      j,        //the iterator variable for the byte array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current byte to the next byte\r\n      n;        //a temporary placeholder variable for the current byte\r\n  for(i in S) { //loop through each base58 character in the input string\r\n      j = 0,                             //reset the byte iterator\r\n      c = A.indexOf( S[i] );             //set the initial carry amount equal to the current base58 digit\r\n      c || b.length ^ i ? i : b.push(0); //prepend the result array with a zero if the base58 digit is zero and non-zero characters haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {               //start looping through the bytes until there are no more bytes and no carry amount\r\n          n = d[j];                      //set the placeholder for the current byte\r\n          n = n ? n * 58 + c : c;        //shift the current byte 58 units and add the carry amount (or just add the carry amount if this is a new byte)\r\n          c = n >> 8;                    //find the new carry amount (1-byte shift of current byte value)\r\n          d[j] = n % 256;                //reset the current byte to the remainder (the carry amount will pass on the overflow)\r\n          j++                            //iterate to the next byte\r\n      }\r\n  }\r\n  while(j--)               //since the byte array is backwards, loop through it in reverse order\r\n      b.push( d[j] );      //append each byte to the result\r\n  return new Uint8Array(b) //return the final byte array in Uint8Array format\r\n}\r\n\r\nbs58.encode = B => {\r\n  let d = [],   //the array for storing the stream of base58 digits\r\n      s = \"\",   //the result string variable that will be returned\r\n      i,        //the iterator variable for the byte input\r\n      j,        //the iterator variable for the base58 digit array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current base58 digit to the next base58 digit\r\n      n;        //a temporary placeholder variable for the current base58 digit\r\n  for(i in B) { //loop through each byte in the input stream\r\n      j = 0,                           //reset the base58 digit iterator\r\n      c = B[i];                        //set the initial carry amount equal to the current byte amount\r\n      s += c || s.length ^ i ? \"\" : 1; //prepend the result string with a \"1\" (0 in base58) if the byte stream is zero and non-zero bytes haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {             //start looping through the digits until there are no more digits and no carry amount\r\n          n = d[j];                    //set the placeholder for the current base58 digit\r\n          n = n ? n * 256 + c : c;     //shift the current base58 one byte and add the carry amount (or just add the carry amount if this is a new digit)\r\n          c = n / 58 | 0;              //find the new carry amount (floored integer of current digit divided by 58)\r\n          d[j] = n % 58;               //reset the current base58 digit to the remainder (the carry amount will pass on the overflow)\r\n          j++                          //iterate to the next base58 digit\r\n      }\r\n  }\r\n  while(j--)        //since the base58 digits are backwards, loop through them in reverse order\r\n      s += A[d[j]]; //lookup the character associated with each base58 digit\r\n  return s          //return the final base58 string\r\n}\r\n\r\nmodule.exports = bs58","const toBytes = hex => {\r\n  const bytes = []\r\n  while (hex.length >= 2) {\r\n    bytes.push(parseInt(hex.substring(0, 2), 16))\r\n    hex = hex.substring(2, hex.length)\r\n  }\r\n  return bytes\r\n}\r\n\r\nmodule.exports = {\r\n  toBytes\r\n}","const isFile = file => {\r\n  if(file instanceof Blob) return true\r\n  return false\r\n}\r\n\r\nconst getFileSize = file => new Promise(resolve => {\r\n  if (file instanceof Blob) return resolve(file.size)\r\n  reject(new Error('casperapi: Cannot compute file size'))\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  isFile,\r\n  getFileSize\r\n}","const sha256 = require('js-sha256')\r\nconst bs58 = require('./crypto/bs58')\r\nconst hex = require('./crypto/hex')\r\nconst { isFile, getFileSize } = require('./file')\r\n\r\nconst parseSCString = hash => {\r\n  const val = hash.substring(2)\r\n  const codes = []\r\n\r\n  for(let i=0; i < val.length; i += 2) {\r\n    codes.push(parseInt(val.substr(i, 2), 16))\r\n  }\r\n\r\n  return String.fromCharCode.apply(0, codes.filter(code => code !== 0))\r\n}\r\n\r\nconst uuidToHash = uuid => {\r\n  const bytes = bs58.decode(uuid)\r\n  const sha = sha256(bytes)\r\n  return '0x' + sha\r\n}\r\n\r\nconst nodeIdToBytes = id => {\r\n  const value = id.substr(0, 2) === '0x' ? id.substr(2) : id\r\n  const bytes = hex.toBytes('1220' + value)\r\n  const base58 = bs58.encode(bytes)\r\n\r\n  return base58\r\n}\r\n\r\nconst entropy = () => Math.round(Math.random() * 100000)\r\n\r\nconst neoDecodeOne = (neo, type, res) => {\r\n  switch (type) {\r\n  case Number:\r\n    switch (res.type) {\r\n    case 'Integer':\r\n      return parseInt(res.value)\r\n    case 'ByteArray':\r\n      const hex = neo.u.reverseHex(res.value)\r\n      return parseInt(hex, 16)\r\n    }\r\n  \r\n  case String:\r\n    return neo.u.hexstring2str(res.value)\r\n\r\n  default:\r\n    throw new Error(`casperapi: Unsupported neo decode pair: ${res.type} -> ${typeof type()}`)\r\n  }\r\n}\r\nconst neoDecode = (neo, desiredTypes, results) => {\r\n  if(Array.isArray(desiredTypes)) {\r\n    if(results.length < desiredTypes.length) throw new Error(`casperapi: Result to short, cannont convert ${results.length} of ${desiredTypes.length}`) \r\n    return desiredTypes.map((type, idx) => neoDecodeOne(neo, type, results[idx]))\r\n  }\r\n\r\n  return neoDecodeOne(neo, desiredTypes, results)\r\n}\r\n\r\nconst detectBlockchain = api => {\r\n  if( ! api instanceof Object) return\r\n\r\n  if(\r\n    (api.sign && api.sign.call === 'eth_sign') \r\n    || (api.eth && api.eth.sign && api.sign.call === 'eth_sign')\r\n  ) {\r\n    return 'eth'\r\n  } else if (api.CONST && api.CONST.NEO_NETWORK) {\r\n    return 'neo'\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  parseSCString,\r\n  isFile,\r\n  getFileSize,\r\n  uuidToHash,\r\n  nodeIdToBytes,\r\n  entropy,\r\n  neoDecode,\r\n  detectBlockchain\r\n}","module.exports = require(\"js-sha256\");"],"sourceRoot":""}