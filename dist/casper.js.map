{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eth/sc.js","webpack:///./src/index.js","webpack:///./src/promise.js","webpack:///./src/requestAdapter/browser.js","webpack:///./src/requestAny.js","webpack:///./src/utils/crypto/bs58.js","webpack:///./src/utils/file/browser.js","webpack:///./src/utils/utils.js","webpack:///external \"js-sha256\""],"names":["require","parseSCString","uuidToHash","SC_INTERFACE","SC_ADDR","development","production","sc","getSC","eth","mode","pair","Contract","push","getUploadNodes","fileSize","Promise","resolve","reject","methods","getPeers","call","then","hashes","Object","keys","data","filter","key","startsWith","map","all","getNodeAddress","hash","ip","ipPort","replace","ipfs","catch","getStoringNodes","uuid","fileHash","showStoringPeers","nodeHashes","length","node","ipPorts","module","exports","scEth","CasperPromise","requestAny","utils","REST_PORT","Casper","api","blockchain","blockchainAPI","file","emit","isFile","TypeError","getFileSize","ips","nodes","x","peers","headers","JSON","stringify","method","url","on","event","parse","UUID","encoding","sharingNode","path","cb","subscribers","message","forEach","realResolve","realReject","hijackControls","p","bind","makeRequest","triggerAbort","promise","handleProgress","done","loaded","total","form","FormData","append","req","XMLHttpRequest","responseType","upload","onprogress","onload","response","onerror","err","open","header","setRequestHeader","send","abort","request","hostWorthTrying","host","rejected","canceled","config","Error","hosts","abortRequest","championHost","setChampion","progressHost","assign","possibleIps","A","bs58","encode","d","s","i","j","c","n","B","decode","b","S","indexOf","Uint8Array","Blob","size","sha256","val","substring","codes","parseInt","substr","String","fromCharCode","apply","code","bytes","sha","array","encoded","concat"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;eCnEsC,mBAAAA,CAAQ,sCAAR,C;IAA9BC,a,YAAAA,a;IAAeC,U,YAAAA,U;;AAGvB,IAAMC,eAAe,mBAAAH,CAAQ,4CAAR,CAArB;AACA,IAAMI,UAAU;AACdC,eAAa,0CADC;AAEdC,cAAY;AAFE,CAAhB;AAIA,IAAMC,KAAK;AACTF,eAAa,EADJ;AAETC,cAAY;AAFH,CAAX;AAIA,IAAME,QAAQ,SAARA,KAAQ,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC3B;AAD2B;AAAA;AAAA;;AAAA;AAE3B,yBAAgBH,GAAGG,IAAH,CAAhB,8HAA0B;AAAA,UAAlBC,KAAkB;;AACxB,UAAGA,MAAKF,GAAL,KAAaA,GAAhB,EAAqB,OAAOE,MAAKJ,EAAZ;AACtB;;AAED;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3B,MAAMI,OAAO,EAAEF,QAAF,EAAOF,IAAI,IAAIE,IAAIG,QAAR,CAAiBT,YAAjB,EAA+BC,QAAQM,IAAR,CAA/B,CAAX,EAAb;AACAH,KAAGG,IAAH,EAASG,IAAT,CAAcF,IAAd;;AAEA,SAAOA,KAAKJ,EAAZ;AACD,CAXD;;AAcA,IAAMO,iBAAiB,SAAjBA,cAAiB,CAACL,GAAD;AAAA,MAAQM,QAAR,QAAQA,QAAR;AAAA,MAAkBL,IAAlB,QAAkBA,IAAlB;AAAA,SAA6B,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnF,QAAMX,KAAKC,MAAMC,GAAN,EAAWC,IAAX,CAAX;;AAEAH,OAAGY,OAAH,CAAWC,QAAX,CAAoBL,QAApB,EAA8BM,IAA9B,GACGC,IADH,CACQ,gBAAQ;AACZ,UAAMC,SAASC,OAAOC,IAAP,CAAYC,IAAZ,EACAC,MADA,CACO;AAAA,eAAOC,IAAIC,UAAJ,CAAe,IAAf,CAAP;AAAA,OADP,EAEAC,GAFA,CAEI;AAAA,eAAOJ,KAAKE,GAAL,CAAP;AAAA,OAFJ,CAAf;;AAIA,aAAOZ,QAAQe,GAAR,CACLR,OAAOO,GAAP,CAAW;AAAA,eAAQ,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,iBAC7BX,GAAGY,OAAH,CAAWa,cAAX,CAA0BC,IAA1B,EACGZ,IADH,GAEGC,IAFH,CAEQ;AAAA,mBAAUL,QAAQ;AACtBiB,kBAAIC,OAAO,CAAP,EAAUC,OAAV,CAAkB,KAAlB,EAAyB,EAAzB,CADkB,EACY;AAClCC,oBAAMF,OAAO,CAAP,CAFgB;AAGtBF;AAHsB,aAAR,CAAV;AAAA,WAFR,EAOGK,KAPH,CAOSpB,MAPT,CAD6B;AAAA,SAAZ,CAAR;AAAA,OAAX,CADK,CAAP;AAYD,KAlBH,EAmBGI,IAnBH,CAmBQL,OAnBR;AAoBD,GAvBmD,CAA7B;AAAA,CAAvB;;AA0BA,IAAMsB,kBAAkB,SAAlBA,eAAkB,CAAC9B,GAAD;AAAA,MAAQ+B,IAAR,SAAQA,IAAR;AAAA,MAAc9B,IAAd,SAAcA,IAAd;AAAA,SAAyB,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChF,QAAMX,KAAKC,MAAMC,GAAN,EAAWC,IAAX,CAAX;;AAGA,QAAM+B,WAAWvC,WAAWsC,IAAX,CAAjB;AACAjC,OAAGY,OAAH,CAAWuB,gBAAX,CAA4BD,QAA5B,EAAsCpB,IAAtC,GACGC,IADH,CACQ,gBAAQ;AACZ,UAAMqB,aAAa,EAAnB;AACA,WAAI,IAAIf,GAAR,IAAeF,IAAf,EAAqB;AACnB,YAAMO,OAAOP,KAAKE,GAAL,CAAb;AACA,YAAGK,KAAKW,MAAR,EAAgBD,WAAW9B,IAAX,CAAgBoB,IAAhB;AACjB;;AAED,aAAOjB,QAAQe,GAAR,CACLY,WAAWb,GAAX,CAAe;AAAA,eAAQvB,GAAGY,OAAH,CAAWa,cAAX,CAA0Ba,IAA1B,EAAgCxB,IAAhC,EAAR;AAAA,OAAf,CADK,CAAP;AAGD,KAXH,EAYGC,IAZH,CAYQ;AAAA,aAAWwB,QAAQhB,GAAR,CAAY;AAAA,eAAUK,OAAO,CAAP,EAAUC,OAAV,CAAkB,KAAlB,EAAyB,EAAzB,CAAV;AAAA,OAAZ,CAAX;AAAA,KAZR,EAaGd,IAbH,CAaQL,OAbR;AAcD,GAnBgD,CAAzB;AAAA,CAAxB;;AAsBA8B,OAAOC,OAAP,GAAiB;AACflC,gCADe;AAEfyB;AAFe,CAAjB,C;;;;;;;;;;;;;;;;;;AC1EA;AACA,IAAMU,QAAQ,mBAAAjD,CAAQ,iCAAR,CAAd;AACA,IAAMkD,gBAAgB,mBAAAlD,CAAQ,mCAAR,CAAtB;AACA,IAAMmD,aAAa,mBAAAnD,CAAQ,yCAAR,CAAnB;AACA,IAAMoD,QAAQ,mBAAApD,CAAQ,qCAAR,CAAd;;AAGA,IAAMqD,YAAY,IAAlB;AACA,IAAM9C,KAAK;AACTE,OAAKwC;AADI,CAAX;;IAKMK,M;AACJ,kBAAYC,GAAZ,EAAgE;AAAA,mFAAJ,EAAI;AAAA,+BAA7CC,UAA6C;AAAA,QAA7CA,UAA6C,mCAAlC,KAAkC;AAAA,yBAA3B9C,IAA2B;AAAA,QAA3BA,IAA2B,6BAAtB,aAAsB;;AAAA;;AAC9D;AACA,SAAK8C,UAAL,GAAkBA,UAAlB;AACA,SAAK9C,IAAL,GAAYA,IAAZ;AACA,QAAG,KAAK8C,UAAL,KAAoB,KAAvB,EAA8B,KAAKC,aAAL,GAAqBF,IAAI9C,GAAJ,IAAW8C,GAAhC;AAC/B;;AAED;;;;;;;;;;;yBAOKG,I,EAAoB;AAAA;;AAAA,UAAdlB,IAAc,uEAAP,KAAO;;AACvB,aAAOU,cAAc,UAACjC,OAAD,EAAUC,MAAV,EAAkByC,IAAlB,EAA2B;AAC9C,YAAI,CAAEP,MAAMQ,MAAN,CAAaF,IAAb,CAAN,EAA0B;AACxB,gBAAM,IAAIG,SAAJ,CAAc,qEAAd,CAAN;AACD;;AAEDT,cAAMU,WAAN,CAAkBJ,IAAlB,EACGpC,IADH,CACQ,oBAAY;AAChB,iBAAOf,GAAG,MAAKiD,UAAR,EAAoB1C,cAApB,CAAmC,MAAK2C,aAAxC,EAAuD,EAAE1C,kBAAF,EAAYL,MAAM,MAAKA,IAAvB,EAAvD,CAAP;AACD,SAHH,EAIGY,IAJH,CAIQ,iBAAS;AACbqC,eAAK,cAAL;;AAEA,cAAMI,MAAMC,MAAMlC,GAAN,CAAU;AAAA,mBAAKmC,EAAE/B,EAAP;AAAA,WAAV,CAAZ;AACA,cAAMgC,QAAQF,MAAMlC,GAAN,CAAU;AAAA,mBAAQmC,EAAE5B,IAAV,cAAuB4B,EAAEhC,IAAzB;AAAA,WAAV,CAAd;AACA,cAAMkC,UAAU;AACd,uBAAWC,KAAKC,SAAL,CAAeH,KAAf;AADG,WAAhB;;AAIA,cAAII,eAAJ;AAAA,cAAYC,YAAZ;AACA,cAAG/B,IAAH,EAAS;AACP;AACA8B,qBAAS,KAAT;AACAC,qCAAuBlB,SAAvB,wBAAmDb,IAAnD;AACD,WAJD,MAIO;AACL;AACA8B,qBAAS,MAAT;AACAC,qCAAuBlB,SAAvB;AACD;;AAEDF,qBAAWmB,MAAX,EAAmBC,GAAnB,EAAwBR,GAAxB,EAA6B,EAAEL,UAAF,EAAQS,gBAAR,EAA7B,EACGK,EADH,CACM,UADN,EACkB;AAAA,mBAASb,KAAK,UAAL,EAAiBc,KAAjB,CAAT;AAAA,WADlB,EAEGD,EAFH,CAEM,cAFN,EAEsB;AAAA,mBAAMb,KAAK,YAAL,EAAmBzB,EAAnB,CAAN;AAAA,WAFtB,EAGGZ,IAHH,CAGQ,gBAAQ;AACZL,oBAAQmD,KAAKM,KAAL,CAAWhD,IAAX,EAAiBiD,IAAzB;AACD,WALH,EAMGrC,KANH,CAMSpB,MANT;AAOD,SA/BH,EAgCGoB,KAhCH,CAgCSpB,MAhCT;AAiCD,OAtCM,CAAP;AAuCD;;AAED;;;;;;;;4BAKOsB,I,EAAM;AAAA;;AACX,aAAOU,cAAc,UAACjC,OAAD,EAAUC,MAAV,EAAkByC,IAAlB,EAA2B;AAC9CpD,WAAG,OAAKiD,UAAR,EACGjB,eADH,CACmB,OAAKkB,aADxB,EACuC,EAAEjB,UAAF,EAAQ9B,MAAM,OAAKA,IAAnB,EADvC,EAEGY,IAFH,CAEQ,eAAO;AACXqC,eAAK,cAAL;AACAR,qBAAW,QAAX,qBAAsCE,SAAtC,wBAAkEb,IAAlE,EAA0EuB,GAA1E,EACGS,EADH,CACM,cADN,EACsB;AAAA,mBAAMb,KAAK,YAAL,EAAmBzB,EAAnB,CAAN;AAAA,WADtB,EAEGZ,IAFH,CAEQL,OAFR,EAGGqB,KAHH,CAGSpB,MAHT;AAID,SARH,EASGoB,KATH,CASSpB,MATT;AAUD,OAXM,CAAP;AAYD;;AAED;;;;;;;;4BAKQsB,I,EAAM;AAAA;;AACZ,aAAOU,cAAc,UAACjC,OAAD,EAAUC,MAAV,EAAkByC,IAAlB,EAA2B;AAC9CpD,WAAG,OAAKiD,UAAR,EACGjB,eADH,CACmB,OAAKkB,aADxB,EACuC,EAAEjB,UAAF,EAAQ9B,MAAM,OAAKA,IAAnB,EADvC,EAEGY,IAFH,CAEQ,eAAO;AACXqC,eAAK,cAAL;AACA,iBAAOI,GAAP;AACD,SALH,EAMGzC,IANH,CAMQ,eAAO;AACX6B,qBAAW,KAAX,qBAAmCE,SAAnC,wBAA+Db,IAA/D,EAAuEuB,GAAvE,EAA4E,EAAEa,UAAU,IAAZ,EAA5E,EACGJ,EADH,CACM,UADN,EACkB;AAAA,mBAASb,KAAK,UAAL,EAAiBc,KAAjB,CAAT;AAAA,WADlB,EAEGD,EAFH,CAEM,cAFN,EAEsB;AAAA,mBAAMb,KAAK,YAAL,EAAmBzB,EAAnB,CAAN;AAAA,WAFtB,EAGGZ,IAHH,CAGQL,OAHR,EAIGqB,KAJH,CAISpB,MAJT;AAKD,SAZH,EAaGoB,KAbH,CAaSpB,MAbT;AAcD,OAfM,CAAP;AAgBD;;AAED;;;;;;;4BAIQsB,I,EAAM;AAAA;;AACZ,aAAOU,cAAc,UAACjC,OAAD,EAAUC,MAAV,EAAkByC,IAAlB,EAA2B;AAC9C,YAAIkB,cAAc,EAAlB;AACAtE,WAAG,OAAKiD,UAAR,EACGjB,eADH,CACmB,OAAKkB,aADxB,EACuC,EAAEjB,UAAF,EAAQ9B,MAAM,OAAKA,IAAnB,EADvC,EAEGY,IAFH,CAEQ,eAAO;AACXqC,eAAK,cAAL;AACAR,qBAAW,MAAX,qBAAoCE,SAApC,yBAAiEb,IAAjE,EAAyEuB,GAAzE,EACGS,EADH,CACM,cADN,EACsB;AAAA,mBAAMK,cAAc3C,EAApB;AAAA,WADtB,EAEGZ,IAFH,CAEQ;AAAA,mBAAQL,oBACF4D,WADE,SACaxB,SADb,GACyByB,IADzB,CAAR;AAAA,WAFR,EAKGxC,KALH,CAKSpB,MALT;AAMD,SAVH,EAWGoB,KAXH,CAWSpB,MAXT;AAYD,OAdM,CAAP;AAeD;;;;;;AAIH6B,OAAOC,OAAP,GAAiBM,MAAjB,C;;;;;;;;;;;;;;AC1IA,SAASkB,EAAT,CAAYC,KAAZ,EAAmBM,EAAnB,EAAuB;AACrB,MAAG,CAAC,KAAKC,WAAL,CAAiBP,KAAjB,CAAJ,EAA6B,KAAKO,WAAL,CAAiBP,KAAjB,IAA0B,EAA1B;AAC7B,OAAKO,WAAL,CAAiBP,KAAjB,EAAwB5D,IAAxB,CAA6BkE,EAA7B;AACA,SAAO,IAAP;AACD;;AAGD,SAASpB,IAAT,CAAcc,KAAd,EAAqBQ,OAArB,EAA8B;AAC5B,MAAG,KAAKD,WAAL,CAAiBP,KAAjB,CAAH,EAA4B,KAAKO,WAAL,CAAiBP,KAAjB,EAAwBS,OAAxB,CAAgC;AAAA,WAAMH,GAAGE,OAAH,CAAN;AAAA,GAAhC;AAC7B;;AAGD,SAAS/B,aAAT,CAAuB6B,EAAvB,EAA2B;AACzB,MAAII,oBAAJ;AACA,MAAIC,mBAAJ;;AAEA,MAAMC,iBAAiB,SAAjBA,cAAiB,CAACpE,OAAD,EAAUC,MAAV,EAAqB;AAC1CiE,kBAAclE,OAAd;AACAmE,iBAAalE,MAAb;AACD,GAHD;;AAKA,MAAIoE,IAAI,IAAItE,OAAJ,CAAYqE,cAAZ,CAAR;;AAEAC,IAAEN,WAAF,GAAgB,EAAhB;AACAM,IAAE3B,IAAF,GAASA,KAAK4B,IAAL,CAAUD,CAAV,CAAT;AACAA,IAAEd,EAAF,GAAOA,GAAGe,IAAH,CAAQD,CAAR,CAAP;;AAEAP,KAAGI,WAAH,EAAgBC,UAAhB,EAA4BE,EAAE3B,IAA9B;AACA,SAAO2B,CAAP;AACD;;AAEDvC,OAAOC,OAAP,GAAiBE,aAAjB,C;;;;;;;;;;;;;;AC/BA,IAAMA,gBAAgB,mBAAAlD,CAAQ,oCAAR,CAAtB;;AAGA,IAAMwF,cAAc,SAAdA,WAAc,OAOd;AAAA,yBANJlB,MAMI;AAAA,MANJA,MAMI,+BANK,KAML;AAAA,MALJC,GAKI,QALJA,GAKI;AAAA,uBAJJ7C,IAII;AAAA,MAJJA,IAII,6BAJG,EAIH;AAAA,MAHJgC,IAGI,QAHJA,IAGI;AAAA,0BAFJS,OAEI;AAAA,MAFJA,OAEI,gCAFM,EAEN;AAAA,MADJS,QACI,QADJA,QACI;;AACJ,MAAIa,qBAAJ;;AAEA,MAAMC,UAAUxC,cAAc,UAACjC,OAAD,EAAUC,MAAV,EAAkByC,IAAlB,EAA2B;AACvD;AACA,QAAMgC,iBAAiB,SAAjBA,cAAiB,QAAS;AAC9B,UAAMC,OAAOnB,MAAMoB,MAAN,GAAepB,MAAMqB,KAAlC;AACA,UAAGF,QAAQ,IAAIA,IAAZ,IAAoBA,QAAQ,CAA/B,EAAkCjC,KAAK,UAAL,EAAiBiC,IAAjB;AACnC,KAHD;;AAKA;AACA,QAAMG,OAAO,IAAIC,QAAJ,EAAb;AACA,SAAI,IAAIpE,GAAR,IAAeF,IAAf,EAAqB;AACnBqE,WAAKE,MAAL,CAAYrE,GAAZ,EAAiBF,KAAKE,GAAL,CAAjB;AACD;AACD,QAAG8B,IAAH,EAASqC,KAAKE,MAAL,CAAY,MAAZ,EAAoBvC,IAApB;;AAGT;AACA,QAAMwC,MAAM,IAAIC,cAAJ,EAAZ;AACA,QAAGvB,aAAa,IAAhB,EAAsBsB,IAAIE,YAAJ,GAAmB,MAAnB;;AAEtB,QAAG1C,IAAH,EAAS;AACPwC,UAAIG,MAAJ,CAAWC,UAAX,GAAwBX,cAAxB;AACD,KAFD,MAEO;AACLO,UAAII,UAAJ,GAAiBX,cAAjB;AACD;;AAEDO,QAAIK,MAAJ,GAAa;AAAA,aAAStF,QAAQiF,IAAIM,QAAZ,CAAT;AAAA,KAAb;AACAN,QAAIO,OAAJ,GAAc;AAAA,aAAOvF,OAAOwF,GAAP,CAAP;AAAA,KAAd;;AAEAR,QAAIS,IAAJ,CAASrC,MAAT,EAAiBC,GAAjB;AACA,SAAI,IAAIqC,MAAR,IAAkBzC,OAAlB,EAA2B;AACzB+B,UAAIW,gBAAJ,CAAqBD,MAArB,EAA6BzC,QAAQyC,MAAR,CAA7B;AACD;AACDV,QAAIY,IAAJ,CAASf,IAAT;;AAEA;AACAN,mBAAeS,IAAIa,KAAJ,CAAUxB,IAAV,CAAeW,GAAf,CAAf;AACD,GApCe,CAAhB;;AAsCAR,UAAQqB,KAAR,GAAgBtB,YAAhB;AACA,SAAOC,OAAP;AACD,CAlDD;;AAqDA3C,OAAOC,OAAP,GAAiBwC,WAAjB,C;;;;;;;;;;;;;;ACxDA,IAAMwB,UAAU,mBAAAhH,CAAQ,yDAAR,CAAhB;AACA,IAAMkD,gBAAgB,mBAAAlD,CAAQ,mCAAR,CAAtB;;AAGA,IAAMiH,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU,CAAEC,KAAKC,QAAT,IAAsBD,KAAKE,QAAnC;AAAA,CAAxB;;AAGA,IAAMjE,aAAa,SAAbA,UAAa,CACjBmB,MADiB,EACTC,GADS,EAEjBR,GAFiB;AAAA,MAGjBsD,MAHiB,uEAGR,EAHQ;AAAA,SAIdnE,cAAc,UAACjC,OAAD,EAAUC,MAAV,EAAkByC,IAAlB,EAA2B;AAC5CI,UAAMA,IAAIpC,MAAJ,CAAW;AAAA,aAAMO,OAAO,SAAb;AAAA,KAAX,CAAN;AACA,QAAG6B,IAAInB,MAAJ,KAAe,CAAlB,EAAqB1B,OAAO,IAAIoG,KAAJ,CAAU,uCAAV,CAAP;;AAErB;AACA,QAAMC,QAAQxD,IAAIjC,GAAJ,CAAQ;AAAA,aAAO;AAC3BI,cAD2B;AAE3BiF,kBAAU,KAFiB;AAG3BC,kBAAU,KAHiB;AAI3BI,sBAAc;AAJa,OAAP;AAAA,KAAR,CAAd;;AAOA,QAAIC,eAAe,EAAnB;;AAEA,QAAMC,cAAc,SAAdA,WAAc,OAAQ;AAC1BD,qBAAeP,IAAf;AACAvD,WAAK,cAAL,EAAqBuD,KAAKhF,EAA1B;AACD,KAHD;;AAKA,QAAMyD,iBAAiB,SAAjBA,cAAiB;AAAA,aAAgB,iBAAS;AAC9C,YAAI,CAAE8B,YAAN,EAAoBC,YAAYC,YAAZ;;AAEpBJ,cACG5F,MADH,CACU;AAAA,iBAAQuF,SAASO,YAAjB;AAAA,SADV,EAEG3F,GAFH,CAEO;AAAA,iBAAQoF,KAAKM,YAAL,EAAR;AAAA,SAFP;;AAIA,YAAGG,iBAAiBF,YAApB,EAAkC;AAChC9D,eAAK,UAAL,EAAiBc,KAAjB;AACD;AACF,OAVsB;AAAA,KAAvB;;AAaA;AACA8C,UAAMrC,OAAN,CAAc,gBAAQ;AACpB;AACA,UAAMgB,MAAMc,QAAQxF,OAAOoG,MAAP,CAAc,EAAd,EAAkBP,MAAlB,EAA0B;AAC5C/C,sBAD4C;AAE5CC,aAAKA,IAAInC,OAAJ,CAAY,QAAZ,EAAsB8E,KAAKhF,EAA3B;AAFuC,OAA1B,CAAR,CAAZ;AAIAgF,WAAKM,YAAL,GAAoBtB,IAAIa,KAAxB;;AAEAb,UACG1B,EADH,CACM,UADN,EACkBmB,eAAeuB,IAAf,CADlB,EAEG5F,IAFH,CAEQ,oBAAY;AAChB;AACA,YAAI,CAAEmG,YAAN,EAAoBC,YAAYR,IAAZ;AACpB,YAAGA,SAASO,YAAZ,EAA0BxG,QAAQuF,QAAR;AAC3B,OANH,EAOGlE,KAPH,CAOS,eAAO;AACZ;AACA4E,aAAKC,QAAL,GAAgB,IAAhB;;AAEA,YAAGD,SAASO,YAAZ,EAA0B;AACxB;AACA,cAAMI,cAAcN,MACG5F,MADH,CACUsF,eADV,EAEGnF,GAFH,CAEO;AAAA,mBAAQoF,KAAKhF,EAAb;AAAA,WAFP,CAApB;;AAKAiB,qBAAWmB,MAAX,EAAmBC,GAAnB,EAAwBsD,WAAxB,EAAqCR,MAArC,EACG7C,EADH,CACM,UADN,EACkB;AAAA,mBAAQb,KAAK,UAAL,EAAiBiC,IAAjB,CAAR;AAAA,WADlB,EAEGpB,EAFH,CAEM,cAFN,EAEsB;AAAA,mBAAMb,KAAK,cAAL,EAAqBzB,EAArB,CAAN;AAAA,WAFtB,EAGGZ,IAHH,CAGQL,OAHR,EAIGqB,KAJH,CAIS,eAAO;AACZpB,mBAAO,IAAIoG,KAAJ,CAAU,sCAAV,CAAP;AACD,WANH;AAOD,SAdD,MAcO,IAAGC,MAAM5F,MAAN,CAAasF,eAAb,EAA8BrE,MAA9B,KAAyC,CAA5C,EAA+C;AACpD1B,iBAAO,IAAIoG,KAAJ,CAAU,sCAAV,CAAP;AACD;AACF,OA5BH;AA6BD,KArCD;AAsCD,GAvEI,CAJc;AAAA,CAAnB;;AA8EAvE,OAAOC,OAAP,GAAiBG,UAAjB,C;;;;;;;;;;;;;;ACrFA,IAAM2E,IAAI,4DAAV;AACA,IAAMC,OAAO,EAAb;;AAEAA,KAAKC,MAAL,GAAc,aAAK;AACjB,QAAIC,IAAI,EAAR;AAAA,QAAc;AACVC,QAAI,EADR;AAAA,QACc;AACVC,cAFJ;AAAA,QAEc;AACVC,cAHJ;AAAA,QAGc;AACVC,cAJJ;AAAA,QAIc;AACVC,cALJ,CADiB,CAMH;AACd,SAAIH,CAAJ,IAASI,CAAT,EAAY;AAAE;AACVH,YAAI,CAAJ,EAAiC;AACjCC,YAAIE,EAAEJ,CAAF,CADJ,CADQ,CAEyB;AACjCD,aAAKG,KAAKH,EAAEtF,MAAF,GAAWuF,CAAhB,GAAoB,EAApB,GAAyB,CAA9B,CAHQ,CAGyB;AACjC,eAAMC,KAAKH,CAAL,IAAUI,CAAhB,EAAmB;AAAc;AAC7BC,gBAAIL,EAAEG,CAAF,CAAJ,CADe,CACc;AAC7BE,gBAAIA,IAAIA,IAAI,GAAJ,GAAUD,CAAd,GAAkBA,CAAtB,CAFe,CAEc;AAC7BA,gBAAIC,IAAI,EAAJ,GAAS,CAAb,CAHe,CAGc;AAC7BL,cAAEG,CAAF,IAAOE,IAAI,EAAX,CAJe,CAIc;AAC7BF,gBALe,CAKc;AAChC;AACJ;AACD,WAAMA,GAAN;AAAkB;AACdF,aAAKJ,EAAEG,EAAEG,CAAF,CAAF,CAAL;AADJ,KAnBiB,CAoBC;AAClB,WAAOF,CAAP,CArBiB,CAqBC;AACnB,CAtBD;;AAyBAH,KAAKS,MAAL,GAAc,aAAK;AACjB,QAAIP,IAAI,EAAR;AAAA,QAAc;AACVQ,QAAI,EADR;AAAA,QACc;AACVN,cAFJ;AAAA,QAEc;AACVC,cAHJ;AAAA,QAGc;AACVC,cAJJ;AAAA,QAIc;AACVC,cALJ,CADiB,CAMH;AACd,SAAIH,CAAJ,IAASO,CAAT,EAAY;AAAE;AACVN,YAAI,CAAJ,EAAmC;AACnCC,YAAIP,EAAEa,OAAF,CAAWD,EAAEP,CAAF,CAAX,CADJ,CADQ,CAE2B;AACnCE,aAAKI,EAAE7F,MAAF,GAAWuF,CAAhB,GAAoBA,CAApB,GAAwBM,EAAE5H,IAAF,CAAO,CAAP,CAAxB,CAHQ,CAG2B;AACnC,eAAMuH,KAAKH,CAAL,IAAUI,CAAhB,EAAmB;AAAgB;AAC/BC,gBAAIL,EAAEG,CAAF,CAAJ,CADe,CACgB;AAC/BE,gBAAIA,IAAIA,IAAI,EAAJ,GAASD,CAAb,GAAiBA,CAArB,CAFe,CAEgB;AAC/BA,gBAAIC,KAAK,CAAT,CAHe,CAGgB;AAC/BL,cAAEG,CAAF,IAAOE,IAAI,GAAX,CAJe,CAIgB;AAC/BF,gBALe,CAKgB;AAClC;AACJ;AACD,WAAMA,GAAN;AAAyB;AACrBK,UAAE5H,IAAF,CAAQoH,EAAEG,CAAF,CAAR;AADJ,KAnBiB,CAoBQ;AACzB,WAAO,IAAIQ,UAAJ,CAAeH,CAAf,CAAP,CArBiB,CAqBQ;AAC1B,CAtBD;;AAwBA1F,OAAOC,OAAP,GAAiB+E,IAAjB,C;;;;;;;;;;;;;;ACpDA,IAAMnE,SAAS,SAATA,MAAS,OAAQ;AACrB,MAAGF,gBAAgBmF,IAAnB,EAAyB,OAAO,IAAP;AACzB,SAAO,KAAP;AACD,CAHD;;AAKA,IAAM/E,cAAc,SAAdA,WAAc;AAAA,SAAQ,IAAI9C,OAAJ,CAAY,mBAAW;AACjD,QAAI0C,gBAAgBmF,IAApB,EAA0B,OAAO5H,QAAQyC,KAAKoF,IAAb,CAAP;AAC1B5H,WAAO,IAAIoG,KAAJ,CAAU,qCAAV,CAAP;AACD,GAH2B,CAAR;AAAA,CAApB;;AAMAvE,OAAOC,OAAP,GAAiB;AACfY,gBADe;AAEfE;AAFe,CAAjB,C;;;;;;;;;;;;;;ACXA,IAAMiF,SAAS,mBAAA/I,CAAQ,4BAAR,CAAf;AACA,IAAM+H,OAAO,mBAAA/H,CAAQ,iDAAR,CAAb;;eACgC,mBAAAA,CAAQ,2CAAR,C;IAAxB4D,M,YAAAA,M;IAAQE,W,YAAAA,W;;AAGhB,IAAM7D,gBAAgB,SAAhBA,aAAgB,OAAQ;AAC5B,MAAM+I,MAAM/G,KAAKgH,SAAL,CAAe,CAAf,CAAZ;AACA,MAAMC,QAAQ,EAAd;;AAEA,OAAI,IAAIf,IAAE,CAAV,EAAaA,IAAIa,IAAIpG,MAArB,EAA6BuF,KAAK,CAAlC,EAAqC;AACnCe,UAAMrI,IAAN,CAAWsI,SAASH,IAAII,MAAJ,CAAWjB,CAAX,EAAc,CAAd,CAAT,EAA2B,EAA3B,CAAX;AACD;;AAED,SAAOkB,OAAOC,YAAP,CAAoBC,KAApB,CAA0B,CAA1B,EAA6BL,MAAMvH,MAAN,CAAa;AAAA,WAAQ6H,SAAS,CAAjB;AAAA,GAAb,CAA7B,CAAP;AACD,CATD;;AAYA,IAAMtJ,aAAa,SAAbA,UAAa,OAAQ;AACzB,MAAMuJ,QAAQ1B,KAAKS,MAAL,CAAYhG,IAAZ,CAAd;AACA,MAAMkH,MAAMX,OAAOY,KAAP,CAAaF,KAAb,CAAZ;;AAEA,MAAMG,UAAU,IAAIhB,UAAJ,CAAe,CAAC,EAAD,EAAKc,IAAI9G,MAAT,EAAiBiH,MAAjB,CAAwBH,GAAxB,CAAf,CAAhB;AACA,MAAMzH,OAAO8F,KAAKC,MAAL,CAAY4B,OAAZ,CAAb;;AAEA,SAAO3H,IAAP;AACD,CARD;;AAWAc,OAAOC,OAAP,GAAiB;AACf/C,8BADe;AAEf2D,gBAFe;AAGfE,0BAHe;AAIf5D;AAJe,CAAjB,C;;;;;;;;;;;AC5BA,sC","file":"casper.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { parseSCString, uuidToHash } = require('../utils')\r\n\r\n\r\nconst SC_INTERFACE = require('./sc.abi.json')\r\nconst SC_ADDR = {\r\n  development: '7ccf0E113e84593f0977Cd05Ff4bebd985a73963',\r\n  production: 'ff89Eb252F1E9C6638823C819DC0b2Ce3bFae7F5'\r\n}\r\nconst sc = {\r\n  development: [],\r\n  production: []\r\n}\r\nconst getSC = (eth, mode) => {\r\n  // initiing casper-sc is somewhat pricy, so we try to get it from cache\r\n  for(let pair of sc[mode]) {\r\n    if(pair.eth === eth) return pair.sc\r\n  }\r\n\r\n  // conneced to another web3 instance or created for the first time\r\n  const pair = { eth, sc: new eth.Contract(SC_INTERFACE, SC_ADDR[mode]) }\r\n  sc[mode].push(pair)\r\n\r\n  return pair.sc\r\n}\r\n\r\n\r\nconst getUploadNodes = (eth, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n  sc.methods.getPeers(fileSize).call()\r\n    .then(data => {\r\n      const hashes = Object.keys(data)\r\n                    .filter(key => key.startsWith('id'))\r\n                    .map(key => data[key])\r\n\r\n      return Promise.all(\r\n        hashes.map(hash => new Promise((resolve, reject) =>\r\n          sc.methods.getNodeAddress(hash)\r\n            .call()\r\n            .then(ipPort => resolve({\r\n              ip: ipPort[0].replace(/:.*/, ''), // removing thrift port\r\n              ipfs: ipPort[1],\r\n              hash\r\n            }))\r\n            .catch(reject)\r\n        ))\r\n      )\r\n    })\r\n    .then(resolve)\r\n})\r\n\r\n\r\nconst getStoringNodes = (eth, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n\r\n  const fileHash = uuidToHash(uuid)\r\n  sc.methods.showStoringPeers(fileHash).call()\r\n    .then(data => {\r\n      const nodeHashes = []\r\n      for(let key in data) {\r\n        const hash = data[key]\r\n        if(hash.length) nodeHashes.push(hash)\r\n      }\r\n\r\n      return Promise.all(\r\n        nodeHashes.map(node => sc.methods.getNodeAddress(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort[0].replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","// we use commonsjs for node export\r\nconst scEth = require('./eth/sc')\r\nconst CasperPromise = require('./promise')\r\nconst requestAny = require('./requestAny')\r\nconst utils = require('./utils')\r\n\r\n\r\nconst REST_PORT = 5001\r\nconst sc = {\r\n  eth: scEth\r\n}\r\n\r\n\r\nclass Casper {\r\n  constructor(api, { blockchain='eth', mode='development' } = {}) {\r\n    // Later we will add more blockchains and use autodetection, etherium is the default mode\r\n    this.blockchain = blockchain\r\n    this.mode = mode\r\n    if(this.blockchain === 'eth') this.blockchainAPI = api.eth || api\r\n  }\r\n\r\n  /**\r\n   * Writes file into casper storage.\r\n   * If uuid is present file is overwritten\r\n   * @param {(Blob | Buffer | stream.Readable)} file\r\n   * @param {String} uuid file's unique id (from previous upload)\r\n   * @return {CasperPromise} resolves with uuid\r\n   */\r\n  save(file, uuid = false) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      if( ! utils.isFile(file)) {\r\n        throw new TypeError('casperapi: file type must be File | Blob | Buffer | stream.Readable')\r\n      }\r\n\r\n      utils.getFileSize(file)\r\n        .then(fileSize => {\r\n          return sc[this.blockchain].getUploadNodes(this.blockchainAPI, { fileSize, mode: this.mode })\r\n        })\r\n        .then(nodes => {\r\n          emit('sc-connected')\r\n\r\n          const ips = nodes.map(x => x.ip)\r\n          const peers = nodes.map(x => `${x.ipfs}/ipfs/${x.hash}`)\r\n          const headers = {\r\n            'X-Peers': JSON.stringify(peers)\r\n          }\r\n\r\n          let method, url\r\n          if(uuid) {\r\n            // Update\r\n            method = 'PUT'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`\r\n          } else {\r\n            // Save new\r\n            method = 'POST'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file`\r\n          }\r\n\r\n          requestAny(method, url, ips, { file, headers })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(data => {\r\n              resolve(JSON.parse(data).UUID)\r\n            })\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Deletes file from casper storage.\r\n   * @param {String} uuid file's unique id (returned from upload)\r\n   * @return {CasperPromise} resolves with void\r\n   */\r\n  delete(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('DELETE', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips)\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets file from casper storage.\r\n   * @param {String} uuid file's unique id (from upload)\r\n   * @return {CasperPromise} resolves with Blob | Buffer, after the whole file is downloaded\r\n   */\r\n  getFile(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          return ips\r\n        })\r\n        .then(ips => {\r\n          requestAny('GET', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips, { encoding: null })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates http link that allows to work with file the usual web way\r\n   * @param {String} uuid file's unique id (from upload)\r\n   */\r\n  getLink(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      let sharingNode = ''\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('POST', `http://{host}:${REST_PORT}/casper/v0/share/${uuid}`, ips)\r\n            .on('new-champion', ip => sharingNode = ip)\r\n            .then(path => resolve(\r\n              `http://${sharingNode}:${REST_PORT}${path}`\r\n            ))\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = Casper\r\n","function on(event, cb) {\r\n  if(!this.subscribers[event]) this.subscribers[event] = []\r\n  this.subscribers[event].push(cb)\r\n  return this\r\n}\r\n\r\n\r\nfunction emit(event, message) {\r\n  if(this.subscribers[event]) this.subscribers[event].forEach(cb => cb(message))\r\n}\r\n\r\n\r\nfunction CasperPromise(cb) {\r\n  let realResolve\r\n  let realReject\r\n\r\n  const hijackControls = (resolve, reject) => {\r\n    realResolve = resolve\r\n    realReject = reject\r\n  }\r\n\r\n  let p = new Promise(hijackControls)\r\n\r\n  p.subscribers = {}\r\n  p.emit = emit.bind(p)\r\n  p.on = on.bind(p)\r\n\r\n  cb(realResolve, realReject, p.emit)\r\n  return p\r\n}\r\n\r\nmodule.exports = CasperPromise","const CasperPromise = require('../promise')\r\n\r\n\r\nconst makeRequest = ({\r\n  method = 'GET',\r\n  url,\r\n  data = {},\r\n  file,\r\n  headers = {},\r\n  encoding\r\n}) => {\r\n  let triggerAbort\r\n\r\n  const promise = CasperPromise((resolve, reject, emit) => {\r\n    // helpers\r\n    const handleProgress = event => {\r\n      const done = event.loaded / event.total\r\n      if(done && 0 < done && done <= 1) emit('progress', done)\r\n    }\r\n    \r\n    // preparation\r\n    const form = new FormData()\r\n    for(let key in data) {\r\n      form.append(key, data[key])\r\n    }\r\n    if(file) form.append('file', file)\r\n\r\n\r\n    // dispatching request\r\n    const req = new XMLHttpRequest()\r\n    if(encoding === null) req.responseType = 'blob'\r\n    \r\n    if(file) {\r\n      req.upload.onprogress = handleProgress\r\n    } else {\r\n      req.onprogress = handleProgress\r\n    }\r\n  \r\n    req.onload = event => resolve(req.response)\r\n    req.onerror = err => reject(err)\r\n\r\n    req.open(method, url)\r\n    for(let header in headers) {\r\n      req.setRequestHeader(header, headers[header])\r\n    }\r\n    req.send(form)\r\n\r\n    // providing abort feature\r\n    triggerAbort = req.abort.bind(req)\r\n  })\r\n\r\n  promise.abort = triggerAbort\r\n  return promise\r\n}\r\n\r\n\r\nmodule.exports = makeRequest","const request = require('./requestAdapter')\r\nconst CasperPromise = require('./promise')\r\n\r\n\r\nconst hostWorthTrying = host => ( ! host.rejected) || host.canceled\r\n\r\n\r\nconst requestAny = (\r\n  method, url,\r\n  ips,\r\n  config = {}\r\n) => CasperPromise((resolve, reject, emit) => {\r\n  ips = ips.filter(ip => ip !== '0.0.0.0')\r\n  if(ips.length === 0) reject(new Error('casperapi: No hosts to handle request'))\r\n\r\n  // preparation\r\n  const hosts = ips.map(ip => ({\r\n    ip,\r\n    rejected: false,\r\n    canceled: false,\r\n    abortRequest: null\r\n  }))\r\n\r\n  let championHost = ''\r\n\r\n  const setChampion = host => {\r\n    championHost = host\r\n    emit('new-champion', host.ip)\r\n  }\r\n\r\n  const handleProgress = progressHost => event => {\r\n    if( ! championHost) setChampion(progressHost)\r\n\r\n    hosts\r\n      .filter(host => host !== championHost)\r\n      .map(host => host.abortRequest())\r\n\r\n    if(progressHost === championHost) {\r\n      emit('progress', event)\r\n    }\r\n  }\r\n\r\n\r\n  // dispatching requests\r\n  hosts.forEach(host => {\r\n    // would introcduce babel later\r\n    const req = request(Object.assign({}, config, {\r\n      method,\r\n      url: url.replace('{host}', host.ip),\r\n    }))\r\n    host.abortRequest = req.abort\r\n\r\n    req\r\n      .on('progress', handleProgress(host))\r\n      .then(response => {\r\n        // avoiding multiple resolves\r\n        if( ! championHost) setChampion(host)\r\n        if(host === championHost) resolve(response)\r\n      })\r\n      .catch(err => {\r\n        // console.log('Host err', err, host)\r\n        host.rejected = true\r\n\r\n        if(host === championHost) {\r\n          // trying other requests that didn't fail\r\n          const possibleIps = hosts\r\n                                .filter(hostWorthTrying)\r\n                                .map(host => host.ip)\r\n\r\n\r\n          requestAny(method, url, possibleIps, config)\r\n            .on('progress', done => emit('progress', done))\r\n            .on('new-champion', ip => emit('new-champion', ip))\r\n            .then(resolve)\r\n            .catch(err => {\r\n              reject(new Error('casperapi: All hosts are unreachable'))\r\n            })\r\n        } else if(hosts.filter(hostWorthTrying).length === 0) {\r\n          reject(new Error('casperapi: All hosts are unreachable'))\r\n        }\r\n      })\r\n  })\r\n})\r\n\r\n\r\nmodule.exports = requestAny\r\n","const A = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\nconst bs58 = {}\r\n\r\nbs58.encode = B => {\r\n  let d = [],   //the array for storing the stream of base58 digits\r\n      s = \"\",   //the result string variable that will be returned\r\n      i,        //the iterator variable for the byte input\r\n      j,        //the iterator variable for the base58 digit array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current base58 digit to the next base58 digit\r\n      n;        //a temporary placeholder variable for the current base58 digit\r\n  for(i in B) { //loop through each byte in the input stream\r\n      j = 0,                           //reset the base58 digit iterator\r\n      c = B[i];                        //set the initial carry amount equal to the current byte amount\r\n      s += c || s.length ^ i ? \"\" : 1; //prepend the result string with a \"1\" (0 in base58) if the byte stream is zero and non-zero bytes haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {             //start looping through the digits until there are no more digits and no carry amount\r\n          n = d[j];                    //set the placeholder for the current base58 digit\r\n          n = n ? n * 256 + c : c;     //shift the current base58 one byte and add the carry amount (or just add the carry amount if this is a new digit)\r\n          c = n / 58 | 0;              //find the new carry amount (floored integer of current digit divided by 58)\r\n          d[j] = n % 58;               //reset the current base58 digit to the remainder (the carry amount will pass on the overflow)\r\n          j++                          //iterate to the next base58 digit\r\n      }\r\n  }\r\n  while(j--)        //since the base58 digits are backwards, loop through them in reverse order\r\n      s += A[d[j]]; //lookup the character associated with each base58 digit\r\n  return s          //return the final base58 string\r\n}\r\n\r\n\r\nbs58.decode = S => {\r\n  let d = [],   //the array for storing the stream of decoded bytes\r\n      b = [],   //the result byte array that will be returned\r\n      i,        //the iterator variable for the base58 string\r\n      j,        //the iterator variable for the byte array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current byte to the next byte\r\n      n;        //a temporary placeholder variable for the current byte\r\n  for(i in S) { //loop through each base58 character in the input string\r\n      j = 0,                             //reset the byte iterator\r\n      c = A.indexOf( S[i] );             //set the initial carry amount equal to the current base58 digit\r\n      c || b.length ^ i ? i : b.push(0); //prepend the result array with a zero if the base58 digit is zero and non-zero characters haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {               //start looping through the bytes until there are no more bytes and no carry amount\r\n          n = d[j];                      //set the placeholder for the current byte\r\n          n = n ? n * 58 + c : c;        //shift the current byte 58 units and add the carry amount (or just add the carry amount if this is a new byte)\r\n          c = n >> 8;                    //find the new carry amount (1-byte shift of current byte value)\r\n          d[j] = n % 256;                //reset the current byte to the remainder (the carry amount will pass on the overflow)\r\n          j++                            //iterate to the next byte\r\n      }\r\n  }\r\n  while(j--)               //since the byte array is backwards, loop through it in reverse order\r\n      b.push( d[j] );      //append each byte to the result\r\n  return new Uint8Array(b) //return the final byte array in Uint8Array format\r\n}\r\n\r\nmodule.exports = bs58","const isFile = file => {\r\n  if(file instanceof Blob) return true\r\n  return false\r\n}\r\n\r\nconst getFileSize = file => new Promise(resolve => {\r\n  if (file instanceof Blob) return resolve(file.size)\r\n  reject(new Error('casperapi: Cannot compute file size'))\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  isFile,\r\n  getFileSize\r\n}","const sha256 = require('js-sha256')\r\nconst bs58 = require('./crypto/bs58')\r\nconst { isFile, getFileSize } = require('./file')\r\n\r\n\r\nconst parseSCString = hash => {\r\n  const val = hash.substring(2)\r\n  const codes = []\r\n\r\n  for(let i=0; i < val.length; i += 2) {\r\n    codes.push(parseInt(val.substr(i, 2), 16))\r\n  }\r\n\r\n  return String.fromCharCode.apply(0, codes.filter(code => code !== 0))\r\n}\r\n\r\n\r\nconst uuidToHash = uuid => {\r\n  const bytes = bs58.decode(uuid)\r\n  const sha = sha256.array(bytes)\r\n  \r\n  const encoded = new Uint8Array([18, sha.length].concat(sha)) \r\n  const hash = bs58.encode(encoded)\r\n\r\n  return hash\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  parseSCString,\r\n  isFile,\r\n  getFileSize,\r\n  uuidToHash\r\n}","module.exports = require(\"js-sha256\");"],"sourceRoot":""}