{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eth/sc.js","webpack:///./src/index.js","webpack:///./src/neo/sc.js","webpack:///./src/promise.js","webpack:///./src/requestAdapter/node.js","webpack:///./src/requestAny.js","webpack:///./src/utils/crypto/bs58.js","webpack:///./src/utils/crypto/hex.js","webpack:///./src/utils/file/node.js","webpack:///./src/utils/utils.js","webpack:///external \"buffer-to-stream\"","webpack:///external \"fs\"","webpack:///external \"js-sha256\"","webpack:///external \"request\"","webpack:///external \"stream\"","webpack:///external \"stream-length\""],"names":["parseSCString","uuidToHash","nodeIdToBytes","entropy","require","SC_INTERFACE","SC_ADDR","development","production","sc","getSC","eth","mode","pair","Contract","push","getUploadNodes","fileSize","Promise","resolve","reject","methods","getPeers","call","then","data","nodeIds","Object","values","all","map","id","getNodeAddr","ipPort","ip","replace","ipfs","hash","catch","nodes","filter","node","getStoringNodes","uuid","fileHash","showStoringPeers","nodeHashes","ipPorts","module","exports","scEth","scNeo","CasperPromise","requestAny","utils","REST_PORT","neo","Casper","constructor","api","blockchain","detectBlockchain","Error","blockchainAPI","save","file","emit","isFile","TypeError","getFileSize","ips","x","peers","headers","JSON","stringify","method","url","on","event","parse","UUID","delete","getFile","encoding","getLink","sharingNode","path","neoDecode","RPC_ADDR","script","createScript","scriptHash","operation","args","rpc","Query","invokeScript","execute","res","result","stack","value","length","String","slice","u","hexstring2str","substr","cb","subscribers","message","forEach","realResolve","realReject","hijackControls","p","bind","request","Duplex","fs","toStream","makeRequest","triggerAbort","promise","requestConfig","formData","req","err","response","uploaded","total","filesize","undefined","Buffer","byteLength","form","maxDataSize","Infinity","append","knownLength","getLength","chunk","downloaded","abort","hostWorthTrying","host","rejected","canceled","config","hosts","abortRequest","championHost","setChampion","handleProgress","progressHost","assign","possibleIps","done","A","bs58","decode","S","d","b","i","j","c","n","indexOf","Uint8Array","encode","B","s","toBytes","hex","bytes","parseInt","substring","stream","getStreamLength","Readable","sha256","val","codes","fromCharCode","apply","code","sha","base58","Math","round","random","neoDecodeOne","type","Number","reverseHex","desiredTypes","results","Array","isArray","idx","sign","CONST","NEO_NETWORK"],"mappings":"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","file":"casper.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { parseSCString, uuidToHash, nodeIdToBytes, entropy } = require('../utils') \r\n\r\nconst SC_INTERFACE = require('./sc.abi.json')\r\nconst SC_ADDR = {\r\n  development: 'b4854255e34a089FBae02709A35ddc854D238d0C',\r\n  production:  'ff89Eb252F1E9C6638823C819DC0b2Ce3bFae7F5'\r\n}\r\nconst sc = {\r\n  development: [],\r\n  production: []\r\n}\r\nconst getSC = (eth, mode) => {\r\n  // initiing casper-sc is somewhat pricy, so we try to get it from cache\r\n  for(let pair of sc[mode]) {\r\n    if(pair.eth === eth) return pair.sc\r\n  }\r\n\r\n  // conneced to another web3 instance or created for the first time\r\n  const pair = { eth, sc: new eth.Contract(SC_INTERFACE, SC_ADDR[mode]) }\r\n  sc[mode].push(pair)\r\n\r\n  return pair.sc\r\n}\r\n\r\n\r\nconst getUploadNodes = (eth, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n  sc.methods.getPeers(fileSize, entropy()).call()\r\n    .then(data => {\r\n      const nodeIds = Object.values(data)\r\n\r\n      return Promise.all(\r\n        nodeIds.map(id => new Promise((resolve, reject) =>\r\n          sc.methods.getNodeAddr(id)\r\n            .call()\r\n            .then(ipPort => resolve({\r\n              ip: ipPort[0].replace(/:.*/, ''), // removing thrift port\r\n              ipfs: ipPort[1],\r\n              hash: nodeIdToBytes(id)\r\n            }))\r\n            .catch(reject)\r\n        ))\r\n      )\r\n    })\r\n    .then(nodes => nodes.filter(node => node.ip))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nconst getStoringNodes = (eth, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n\r\n  const fileHash = uuidToHash(uuid)\r\n  sc.methods.showStoringPeers(fileHash).call()\r\n    .then(data => {\r\n      const nodeHashes = Object.values(data)\r\n\r\n      return Promise.all(\r\n        nodeHashes.map(node => sc.methods.getNodeAddr(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.filter(ipPort => ipPort[0]))\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort[0].replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","// we use commonsjs for node export\r\nconst scEth = require('./eth/sc')\r\nconst scNeo = require('./neo/sc')\r\nconst CasperPromise = require('./promise')\r\nconst requestAny = require('./requestAny')\r\nconst utils = require('./utils')\r\n\r\n\r\nconst REST_PORT = 5001\r\nconst sc = {\r\n  eth: scEth,\r\n  neo: scNeo\r\n}\r\n\r\n\r\nclass Casper {\r\n  constructor(api, { blockchain, mode='development' } = {}) {\r\n    blockchain = blockchain ? blockchain : utils.detectBlockchain(api)\r\n    if(typeof blockchain === 'undefined') {\r\n      throw new Error('casperapi: Unsupported blockchain api, use web3 / web3-eth / neon-js')\r\n    }\r\n\r\n    this.blockchain = blockchain\r\n    this.mode = mode\r\n    if(this.blockchain === 'eth') this.blockchainAPI = api.eth || api\r\n    else this.blockchainAPI = api\r\n  }\r\n\r\n  /**\r\n   * Writes file into casper storage.\r\n   * If uuid is present file is overwritten\r\n   * @param {(Blob | Buffer | stream.Readable)} file\r\n   * @param {String} uuid file's unique id (from previous upload)\r\n   * @return {CasperPromise} resolves with uuid\r\n   */\r\n  save(file, uuid = false) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      if( ! utils.isFile(file)) {\r\n        throw new TypeError('casperapi: file type must be File | Blob | Buffer | stream.Readable')\r\n      }\r\n\r\n      utils.getFileSize(file)\r\n        .then(fileSize => {\r\n          return sc[this.blockchain].getUploadNodes(this.blockchainAPI, { fileSize, mode: this.mode })\r\n        })\r\n        .then(nodes => {\r\n          emit('sc-connected')\r\n\r\n          const ips = nodes.map(x => x.ip)\r\n          const peers = nodes.map(x => `${x.ipfs}/ipfs/${x.hash}`)\r\n          const headers = {\r\n            'X-Peers': JSON.stringify(peers)\r\n          }\r\n\r\n          let method, url\r\n          if(uuid) {\r\n            // Update\r\n            method = 'PUT'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`\r\n          } else {\r\n            // Save new\r\n            method = 'POST'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file`\r\n          }\r\n\r\n          requestAny(method, url, ips, { file, headers })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(data => {\r\n              resolve(JSON.parse(data).UUID)\r\n            })\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Deletes file from casper storage.\r\n   * @param {String} uuid file's unique id (returned from upload)\r\n   * @return {CasperPromise} resolves with void\r\n   */\r\n  delete(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('DELETE', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips)\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets file from casper storage.\r\n   * @param {String} uuid file's unique id (from upload)\r\n   * @return {CasperPromise} resolves with Blob | Buffer, after the whole file is downloaded\r\n   */\r\n  getFile(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          return ips\r\n        })\r\n        .then(ips => {\r\n          requestAny('GET', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips, { encoding: null })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates http link that allows to work with file the usual web way\r\n   * @param {String} uuid file's unique id (from upload)\r\n   */\r\n  getLink(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      let sharingNode = ''\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('POST', `http://{host}:${REST_PORT}/casper/v0/share/${uuid}`, ips)\r\n            .on('new-champion', ip => sharingNode = ip)\r\n            .then(path => resolve(\r\n              `http://${sharingNode}:${REST_PORT}${path}`\r\n            ))\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = Casper\r\n","const { uuidToHash, nodeIdToBytes, entropy, neoDecode } = require('../utils') \r\n\r\nconst SC_ADDR = {\r\n  development: 'afbbe56378cd68fe045463bd5e3a2978f0ff37bb',\r\n  production:  'ff89Eb252F1E9C6638823C819DC0b2Ce3bFae7F5'\r\n}\r\n\r\nconst RPC_ADDR = {\r\n  development: 'http://195.201.96.242:30333',\r\n  production:  'http://195.201.96.242:30333'\r\n}\r\n\r\nconst getUploadNodes = (neo, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const script = neo.sc.createScript({\r\n    scriptHash: SC_ADDR[mode],\r\n    operation: 'getpeers',\r\n    args: [fileSize, 1]\r\n  })\r\n\r\n  neo.rpc.Query.invokeScript(script)\r\n    .execute(RPC_ADDR[mode])\r\n    .then(res => {\r\n      const result = res.result.stack[0].value\r\n      const nodeIds = result.filter(x => x.value.length).map(x => x.value)\r\n      return nodeIds\r\n    })\r\n    .then(nodeIds => Promise.all(\r\n      nodeIds.map(id => {\r\n        const script = neo.sc.createScript({\r\n          scriptHash: SC_ADDR[mode],\r\n          operation: 'getinfo',\r\n          args: [id]\r\n        })\r\n\r\n        return neo.rpc.Query.invokeScript(script)\r\n          .execute(RPC_ADDR[mode])\r\n          .then(res => {\r\n            const result = res.result.stack[0].value\r\n            const [ip, ipfs] = neoDecode(neo, [String, String], result.slice(2))\r\n            return {\r\n              ip: ip.replace(/:.*/, ''),\r\n              ipfs,\r\n              hash: neo.u.hexstring2str(id)\r\n            }\r\n          })\r\n      }\r\n    )))\r\n    .then(resolve)\r\n})\r\n\r\nconst getStoringNodes = (neo, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const fileHash = uuidToHash(uuid)\r\n  const script = neo.sc.createScript({\r\n    scriptHash: SC_ADDR[mode],\r\n    operation: 'getstoringpeers',\r\n    args: [fileHash.substr(2)] // neo dislikes 0x\r\n  })\r\n\r\n\r\n  neo.rpc.Query.invokeScript(script)\r\n    .execute(RPC_ADDR[mode])\r\n    .then(res => {\r\n      const result = res.result.stack[0].value\r\n      const nodeIds = result.filter(x => x.value.length).map(x => x.value)\r\n      return nodeIds\r\n    })\r\n    .then(nodeIds => Promise.all(\r\n      nodeIds.map(id => {\r\n        const script = neo.sc.createScript({\r\n          scriptHash: SC_ADDR[mode],\r\n          operation: 'getinfo',\r\n          args: [id]\r\n        })\r\n\r\n        return neo.rpc.Query.invokeScript(script)\r\n          .execute(RPC_ADDR[mode])\r\n          .then(res => neoDecode(String, res.result.stack[0].value[2]))\r\n      }\r\n    )))\r\n    .then(ips => ips.filter(ip => ip.length))\r\n    .then(ips => ips.map(ip => ip.replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","function on(event, cb) {\r\n  if(!this.subscribers[event]) this.subscribers[event] = []\r\n  this.subscribers[event].push(cb)\r\n  return this\r\n}\r\n\r\n\r\nfunction emit(event, message) {\r\n  if(this.subscribers[event]) this.subscribers[event].forEach(cb => cb(message))\r\n}\r\n\r\n\r\nfunction CasperPromise(cb) {\r\n  let realResolve\r\n  let realReject\r\n\r\n  const hijackControls = (resolve, reject) => {\r\n    realResolve = resolve\r\n    realReject = reject\r\n  }\r\n\r\n  let p = new Promise(hijackControls)\r\n\r\n  p.subscribers = {}\r\n  p.emit = emit.bind(p)\r\n  p.on = on.bind(p)\r\n\r\n  cb(realResolve, realReject, p.emit)\r\n  return p\r\n}\r\n\r\nmodule.exports = CasperPromise","const request = require('request')\r\nconst Duplex = require('stream').Duplex\r\nconst CasperPromise = require('../promise')\r\nconst fs = require('fs')\r\nconst toStream = require('buffer-to-stream')\r\n\r\nconst makeRequest = ({\r\n  method = 'GET',\r\n  url,\r\n  data = {},\r\n  file,\r\n  headers,\r\n  encoding\r\n}) => {\r\n  let triggerAbort\r\n\r\n  const promise = CasperPromise((resolve, reject, emit) => {\r\n    // preparation\r\n    const requestConfig = {\r\n      method,\r\n      url,\r\n      headers,\r\n      encoding: null,\r\n      formData: data\r\n    }\r\n\r\n    // dispatching request\r\n    const req = request(requestConfig, (err, response, data) => {\r\n      if(err) {\r\n        return reject(err)\r\n      }\r\n      resolve(data)\r\n    })\r\n\r\n    if(file) {\r\n      // upload progress\r\n      let uploaded = 0\r\n      let total = 0\r\n      let filesize = undefined\r\n      if(file instanceof Buffer) {\r\n        filesize = file.byteLength\r\n        file = toStream(file)\r\n      }\r\n  \r\n      const form = req.form()\r\n      form.maxDataSize = Infinity\r\n      form.append('file', file, {\r\n        knownLength: filesize\r\n      })\r\n      \r\n      form.getLength((err, length) => { total = length })\r\n      form.on('data', chunk => {\r\n        // this is form read progress but for fs.createReadStream it's realistic as http reads this in chunks\r\n        uploaded += chunk.length\r\n        if(total) emit('progress', uploaded / total)\r\n      })\r\n    } else {\r\n      // download progress\r\n      let total = 0\r\n      let downloaded = 0\r\n      req.on('response', res => {\r\n        total = res.headers['content-length']\r\n      })\r\n  \r\n      req.on('data', chunk => {\r\n        downloaded += chunk.length\r\n        if(total) emit('progress', downloaded / total)\r\n      })\r\n    }\r\n\r\n\r\n    // providing abort feature\r\n    triggerAbort = req.abort.bind(req)\r\n  })\r\n\r\n  promise.abort = triggerAbort\r\n  return promise\r\n}\r\n\r\n\r\nmodule.exports = makeRequest","const request = require('./requestAdapter')\r\nconst CasperPromise = require('./promise')\r\n\r\n\r\nconst hostWorthTrying = host => ( ! host.rejected) || host.canceled\r\n\r\n\r\nconst requestAny = (\r\n  method, url,\r\n  ips,\r\n  config = {}\r\n) => CasperPromise((resolve, reject, emit) => {\r\n  ips = ips.filter(ip => ip !== '0.0.0.0')\r\n  if(ips.length === 0) reject(new Error('casperapi: No hosts to handle request'))\r\n  \r\n  // preparation\r\n  const hosts = ips.map(ip => ({\r\n    ip,\r\n    rejected: false,\r\n    canceled: false,\r\n    abortRequest: null\r\n  }))\r\n\r\n  let championHost = ''\r\n\r\n  const setChampion = host => {\r\n    championHost = host\r\n    emit('new-champion', host.ip)\r\n  }\r\n\r\n  const handleProgress = progressHost => event => {\r\n    if( ! championHost) setChampion(progressHost)\r\n\r\n    hosts\r\n      .filter(host => host !== championHost)\r\n      .map(host => host.abortRequest())\r\n\r\n    if(progressHost === championHost) {\r\n      emit('progress', event)\r\n    }\r\n  }\r\n\r\n\r\n  // dispatching requests\r\n  hosts.forEach(host => {\r\n    // would introcduce babel later\r\n    const req = request(Object.assign({}, config, {\r\n      method,\r\n      url: url.replace('{host}', host.ip),\r\n    }))\r\n    host.abortRequest = req.abort\r\n\r\n    req\r\n      .on('progress', handleProgress(host))\r\n      .then(response => {\r\n        // avoiding multiple resolves\r\n        if( ! championHost) setChampion(host)\r\n        if(host === championHost) resolve(response)\r\n      })\r\n      .catch(err => {\r\n        // console.log('Host err', err, host)\r\n        host.rejected = true\r\n\r\n        if(host === championHost) {\r\n          // trying other requests that didn't fail\r\n          const possibleIps = hosts\r\n                                .filter(hostWorthTrying)\r\n                                .map(host => host.ip)\r\n\r\n\r\n          requestAny(method, url, possibleIps, config)\r\n            .on('progress', done => emit('progress', done))\r\n            .on('new-champion', ip => emit('new-champion', ip))\r\n            .then(resolve)\r\n            .catch(err => {\r\n              reject(new Error('casperapi: All hosts are unreachable'))\r\n            })\r\n        } else if(hosts.filter(hostWorthTrying).length === 0) {\r\n          reject(new Error('casperapi: All hosts are unreachable'))\r\n        }\r\n      })\r\n  })\r\n})\r\n\r\n\r\nmodule.exports = requestAny\r\n","const A = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\nconst bs58 = {}\r\n\r\nbs58.decode = S => {\r\n  let d = [],   //the array for storing the stream of decoded bytes\r\n      b = [],   //the result byte array that will be returned\r\n      i,        //the iterator variable for the base58 string\r\n      j,        //the iterator variable for the byte array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current byte to the next byte\r\n      n;        //a temporary placeholder variable for the current byte\r\n  for(i in S) { //loop through each base58 character in the input string\r\n      j = 0,                             //reset the byte iterator\r\n      c = A.indexOf( S[i] );             //set the initial carry amount equal to the current base58 digit\r\n      c || b.length ^ i ? i : b.push(0); //prepend the result array with a zero if the base58 digit is zero and non-zero characters haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {               //start looping through the bytes until there are no more bytes and no carry amount\r\n          n = d[j];                      //set the placeholder for the current byte\r\n          n = n ? n * 58 + c : c;        //shift the current byte 58 units and add the carry amount (or just add the carry amount if this is a new byte)\r\n          c = n >> 8;                    //find the new carry amount (1-byte shift of current byte value)\r\n          d[j] = n % 256;                //reset the current byte to the remainder (the carry amount will pass on the overflow)\r\n          j++                            //iterate to the next byte\r\n      }\r\n  }\r\n  while(j--)               //since the byte array is backwards, loop through it in reverse order\r\n      b.push( d[j] );      //append each byte to the result\r\n  return new Uint8Array(b) //return the final byte array in Uint8Array format\r\n}\r\n\r\nbs58.encode = B => {\r\n  let d = [],   //the array for storing the stream of base58 digits\r\n      s = \"\",   //the result string variable that will be returned\r\n      i,        //the iterator variable for the byte input\r\n      j,        //the iterator variable for the base58 digit array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current base58 digit to the next base58 digit\r\n      n;        //a temporary placeholder variable for the current base58 digit\r\n  for(i in B) { //loop through each byte in the input stream\r\n      j = 0,                           //reset the base58 digit iterator\r\n      c = B[i];                        //set the initial carry amount equal to the current byte amount\r\n      s += c || s.length ^ i ? \"\" : 1; //prepend the result string with a \"1\" (0 in base58) if the byte stream is zero and non-zero bytes haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {             //start looping through the digits until there are no more digits and no carry amount\r\n          n = d[j];                    //set the placeholder for the current base58 digit\r\n          n = n ? n * 256 + c : c;     //shift the current base58 one byte and add the carry amount (or just add the carry amount if this is a new digit)\r\n          c = n / 58 | 0;              //find the new carry amount (floored integer of current digit divided by 58)\r\n          d[j] = n % 58;               //reset the current base58 digit to the remainder (the carry amount will pass on the overflow)\r\n          j++                          //iterate to the next base58 digit\r\n      }\r\n  }\r\n  while(j--)        //since the base58 digits are backwards, loop through them in reverse order\r\n      s += A[d[j]]; //lookup the character associated with each base58 digit\r\n  return s          //return the final base58 string\r\n}\r\n\r\nmodule.exports = bs58","const toBytes = hex => {\r\n  const bytes = []\r\n  while (hex.length >= 2) {\r\n    bytes.push(parseInt(hex.substring(0, 2), 16))\r\n    hex = hex.substring(2, hex.length)\r\n  }\r\n  return bytes\r\n}\r\n\r\nmodule.exports = {\r\n  toBytes\r\n}","const stream = require('stream')\r\nconst getStreamLength = require('stream-length')\r\n\r\n\r\nconst isFile = file => ( file instanceof Buffer\r\n                      || file instanceof stream.Readable\r\n)\r\n\r\nconst getFileSize = file => {\r\n  if(file instanceof stream.Readable) return getStreamLength(file)\r\n  if(file instanceof Buffer) return new Promise((resolve => resolve(file.byteLength)))\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  isFile,\r\n  getFileSize\r\n}","const sha256 = require('js-sha256')\r\nconst bs58 = require('./crypto/bs58')\r\nconst hex = require('./crypto/hex')\r\nconst { isFile, getFileSize } = require('./file')\r\n\r\nconst parseSCString = hash => {\r\n  const val = hash.substring(2)\r\n  const codes = []\r\n\r\n  for(let i=0; i < val.length; i += 2) {\r\n    codes.push(parseInt(val.substr(i, 2), 16))\r\n  }\r\n\r\n  return String.fromCharCode.apply(0, codes.filter(code => code !== 0))\r\n}\r\n\r\nconst uuidToHash = uuid => {\r\n  const bytes = bs58.decode(uuid)\r\n  const sha = sha256(bytes)\r\n  return '0x' + sha\r\n}\r\n\r\nconst nodeIdToBytes = id => {\r\n  const value = id.substr(0, 2) === '0x' ? id.substr(2) : id\r\n  const bytes = hex.toBytes('1220' + value)\r\n  const base58 = bs58.encode(bytes)\r\n\r\n  return base58\r\n}\r\n\r\nconst entropy = () => Math.round(Math.random() * 100000)\r\n\r\nconst neoDecodeOne = (neo, type, res) => {\r\n  switch (type) {\r\n  case Number:\r\n    switch (res.type) {\r\n    case 'Integer':\r\n      return parseInt(res.value)\r\n    case 'ByteArray':\r\n      const hex = neo.u.reverseHex(res.value)\r\n      return parseInt(hex, 16)\r\n    }\r\n  \r\n  case String:\r\n    return neo.u.hexstring2str(res.value)\r\n\r\n  default:\r\n    throw new Error(`casperapi: Unsupported neo decode pair: ${res.type} -> ${typeof type()}`)\r\n  }\r\n}\r\nconst neoDecode = (neo, desiredTypes, results) => {\r\n  if(Array.isArray(desiredTypes)) {\r\n    if(results.length < desiredTypes.length) throw new Error(`casperapi: Result to short, cannont convert ${results.length} of ${desiredTypes.length}`) \r\n    return desiredTypes.map((type, idx) => neoDecodeOne(neo, type, results[idx]))\r\n  }\r\n\r\n  return neoDecodeOne(neo, desiredTypes, results)\r\n}\r\n\r\nconst detectBlockchain = api => {\r\n  if( ! api instanceof Object) return\r\n\r\n  if(\r\n    (api.sign && api.sign.call === 'eth_sign') \r\n    || (api.eth && api.eth.sign && api.sign.call === 'eth_sign')\r\n  ) {\r\n    return 'eth'\r\n  } else if (api.CONST && api.CONST.NEO_NETWORK) {\r\n    return 'neo'\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  parseSCString,\r\n  isFile,\r\n  getFileSize,\r\n  uuidToHash,\r\n  nodeIdToBytes,\r\n  entropy,\r\n  neoDecode,\r\n  detectBlockchain\r\n}","module.exports = require(\"buffer-to-stream\");","module.exports = require(\"fs\");","module.exports = require(\"js-sha256\");","module.exports = require(\"request\");","module.exports = require(\"stream\");","module.exports = require(\"stream-length\");"],"sourceRoot":""}