{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eth/sc.js","webpack:///./src/index.js","webpack:///./src/promise.js","webpack:///./src/requestAdapter/node.js","webpack:///./src/requestAny.js","webpack:///./src/utils/crypto/bs58.js","webpack:///./src/utils/file/node.js","webpack:///./src/utils/utils.js","webpack:///external \"fs\"","webpack:///external \"js-sha256\"","webpack:///external \"request\"","webpack:///external \"stream\"","webpack:///external \"stream-length\""],"names":["parseSCString","uuidToHash","require","SC_INTERFACE","SC_ADDR","dev","prod","sc","getSC","eth","mode","pair","Contract","push","getUploadNodes","fileSize","Promise","resolve","reject","methods","getPeers","call","then","data","ids","Object","keys","filter","key","startsWith","map","all","node","getNodeAddress","ipPorts","ipPort","replace","getStoringNodes","uuid","fileHash","showStoringPeers","nodeHashes","hash","length","module","exports","scEth","CasperPromise","requestAny","utils","REST_PORT","Casper","constructor","api","blockchain","blockchainAPI","save","file","emit","isFile","TypeError","getFileSize","ips","method","url","on","event","ip","JSON","parse","UUID","catch","delete","getFile","encoding","getLink","sharingNode","path","cb","subscribers","message","forEach","realResolve","realReject","hijackControls","p","bind","request","Duplex","fs","makeRequest","headers","triggerAbort","promise","requestConfig","formData","req","err","response","uploaded","total","form","maxDataSize","Infinity","append","getLength","chunk","downloaded","res","abort","hostWorthTrying","host","rejected","canceled","config","Error","hosts","abortRequest","championHost","setChampion","handleProgress","progressHost","assign","possibleIps","done","A","bs58","encode","B","d","s","i","j","c","n","decode","S","b","indexOf","Uint8Array","stream","getStreamLength","Buffer","Readable","byteLength","sha256","val","substring","codes","parseInt","substr","String","fromCharCode","apply","code","bytes","sha","array","encoded","concat"],"mappings":"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","file":"casper.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { parseSCString, uuidToHash } = require('../utils')\r\n\r\n\r\nconst SC_INTERFACE = require('./sc.abi.json')\r\nconst SC_ADDR = {\r\n  dev: '9e322Ca6D818ec8a6BFb4352242c5615CDfD3aa7',\r\n  prod: ''\r\n}\r\nconst sc = {\r\n  'dev': [],\r\n  'prod': []\r\n}\r\nconst getSC = (eth, mode) => {\r\n  // initiing casper-sc is somewhat pricy, so we try to get it from cache\r\n  for(let pair of sc[mode]) {\r\n    if(pair.eth === eth) return pair.sc\r\n  }\r\n\r\n  // conneced to another web3 instance or created for the first time\r\n  const pair = { eth, sc: new eth.Contract(SC_INTERFACE, SC_ADDR[mode]) }\r\n  sc[mode].push(pair)\r\n\r\n  return pair.sc\r\n}\r\n\r\n\r\nconst getUploadNodes = (eth, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n  sc.methods.getPeers(fileSize).call()\r\n    .then(data => {\r\n      const ids = Object.keys(data)\r\n                    .filter(key => key.startsWith('id'))\r\n                    .map(key => data[key])\r\n\r\n      return Promise.all(\r\n        ids.map(node => sc.methods.getNodeAddress(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort[0].replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nconst getStoringNodes = (eth, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n\r\n  const fileHash = uuidToHash(uuid)\r\n  sc.methods.showStoringPeers(fileHash).call()\r\n    .then(data => {\r\n      const nodeHashes = []\r\n      for(let key in data) {\r\n        const hash = data[key]\r\n        if(hash.length) nodeHashes.push(hash)\r\n      }\r\n\r\n      return Promise.all(\r\n        nodeHashes.map(node => sc.methods.getNodeAddress(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort[0].replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","// we use commonsjs for node export\r\nconst scEth = require('./eth/sc')\r\nconst CasperPromise = require('./promise')\r\nconst requestAny = require('./requestAny')\r\nconst utils = require('./utils')\r\n\r\n\r\nconst REST_PORT = 5001\r\nconst sc = {\r\n  eth: scEth\r\n}\r\n\r\n\r\nclass Casper {\r\n  constructor(api, { blockchain='eth', mode='dev' } = {}) {\r\n    // Later we will add more blockchains and use autodetection, etherium is the default mode\r\n    this.blockchain = blockchain\r\n    this.mode = mode\r\n    if(this.blockchain === 'eth') this.blockchainAPI = api.eth || api\r\n  }\r\n\r\n  /**\r\n   * Writes file into casper storage.\r\n   * If uuid is present file is overwritten\r\n   * @param {(Blob | Buffer | stream.Readable)} file\r\n   * @param {String} uuid file's unique id (from previous upload)\r\n   * @return {CasperPromise} resolves with uuid\r\n   */\r\n  save(file, uuid = false) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      if( ! utils.isFile(file)) {\r\n        throw new TypeError('casperapi: file type must be File | Blob | Buffer | stream.Readable')\r\n      }\r\n\r\n      utils.getFileSize(file)\r\n        .then(fileSize => {\r\n          return sc[this.blockchain].getUploadNodes(this.blockchainAPI, { fileSize, mode: this.mode })\r\n        })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          let method, url\r\n          if(uuid) {\r\n            // Update\r\n            method = 'PUT'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`\r\n          } else {\r\n            // Save new\r\n            method = 'POST'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file`\r\n          }\r\n\r\n          requestAny(method, url, ips, { file })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(data => {\r\n              resolve(JSON.parse(data).UUID)\r\n            })\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Deletes file from casper storage.\r\n   * @param {String} uuid file's unique id (returned from upload)\r\n   * @return {CasperPromise} resolves with void\r\n   */\r\n  delete(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('DELETE', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips)\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets file from casper storage.\r\n   * @param {String} uuid file's unique id (from upload)\r\n   * @return {CasperPromise} resolves with Blob | Buffer, after the whole file is downloaded\r\n   */\r\n  getFile(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          return ips\r\n        })\r\n        .then(ips => {\r\n          requestAny('GET', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips, { encoding: null })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates http link that allows to work with file the usual web way\r\n   * @param {String} uuid file's unique id (from upload)\r\n   */\r\n  getLink(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      let sharingNode = ''\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('POST', `http://{host}:${REST_PORT}/casper/v0/share/${uuid}`, ips)\r\n            .on('new-champion', ip => sharingNode = ip)\r\n            .then(path => resolve(\r\n              `http://${sharingNode}:${REST_PORT}${path}`\r\n            ))\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = Casper","function on(event, cb) {\r\n  if(!this.subscribers[event]) this.subscribers[event] = []\r\n  this.subscribers[event].push(cb)\r\n  return this\r\n}\r\n\r\n\r\nfunction emit(event, message) {\r\n  if(this.subscribers[event]) this.subscribers[event].forEach(cb => cb(message))\r\n}\r\n\r\n\r\nfunction CasperPromise(cb) {\r\n  let realResolve\r\n  let realReject\r\n\r\n  const hijackControls = (resolve, reject) => {\r\n    realResolve = resolve\r\n    realReject = reject\r\n  }\r\n\r\n  let p = new Promise(hijackControls)\r\n\r\n  p.subscribers = {}\r\n  p.emit = emit.bind(p)\r\n  p.on = on.bind(p)\r\n\r\n  cb(realResolve, realReject, p.emit)\r\n  return p\r\n}\r\n\r\nmodule.exports = CasperPromise","const request = require('request')\r\nconst Duplex = require('stream').Duplex\r\nconst CasperPromise = require('../promise')\r\nconst fs = require('fs')\r\n\r\n\r\nconst makeRequest = ({\r\n  method = 'GET',\r\n  url,\r\n  data = {},\r\n  file,\r\n  headers,\r\n  encoding\r\n}) => {\r\n  let triggerAbort\r\n\r\n  const promise = CasperPromise((resolve, reject, emit) => {\r\n    // preparation\r\n    const requestConfig = {\r\n      method,\r\n      url,\r\n      headers,\r\n      encoding: null,\r\n      formData: data\r\n    }\r\n\r\n    // dispatching request\r\n    const req = request(requestConfig, (err, response, data) => {\r\n      if(err) {\r\n        return reject(err)\r\n      }\r\n      resolve(data)\r\n    })\r\n\r\n    if(file) {\r\n      // upload progress\r\n      let uploaded = 0\r\n      let total = 0\r\n  \r\n      const form = req.form()\r\n      form.maxDataSize = Infinity\r\n      form.append('file', file)\r\n      \r\n      form.getLength((err, length) => { total = length })\r\n      form.on('data', chunk => {\r\n        // this is form read progress but for fs.createReadStream it's realistic as http reads this in chunks\r\n        uploaded += chunk.length\r\n        if(total) emit('progress', uploaded / total)\r\n      })\r\n    } else {\r\n      // download progress\r\n      let total = 0\r\n      let downloaded = 0\r\n      req.on('response', res => {\r\n        total = res.headers['x-content-length']\r\n      })\r\n  \r\n      req.on('data', chunk => {\r\n        downloaded += chunk.length\r\n        if(total) emit('progress', downloaded / total)\r\n      })\r\n    }\r\n\r\n\r\n    // providing abort feature\r\n    triggerAbort = req.abort.bind(req)\r\n  })\r\n\r\n  promise.abort = triggerAbort\r\n  return promise\r\n}\r\n\r\n\r\nmodule.exports = makeRequest","const request = require('./requestAdapter')\r\nconst CasperPromise = require('./promise')\r\n\r\n\r\nconst hostWorthTrying = host => ( ! host.rejected) || host.canceled\r\n\r\n\r\nconst requestAny = (\r\n  method, url,\r\n  ips,\r\n  config = {}\r\n) => CasperPromise((resolve, reject, emit) => {\r\n  ips = ips.filter(ip => ip !== '0.0.0.0')\r\n  if(ips.length === 0) reject(new Error('casperapi: No hosts to handle request'))\r\n\r\n  // preparation\r\n  const hosts = ips.map(ip => ({\r\n    ip,\r\n    rejected: false,\r\n    canceled: false,\r\n    abortRequest: null\r\n  }))\r\n\r\n  let championHost = ''\r\n\r\n  const setChampion = host => {\r\n    championHost = host\r\n    emit('new-champion', host.ip)\r\n  }\r\n\r\n  const handleProgress = progressHost => event => {\r\n    if( ! championHost) setChampion(progressHost)\r\n\r\n    hosts\r\n      .filter(host => host !== championHost)\r\n      .map(host => host.abortRequest())\r\n\r\n    if(progressHost === championHost) {\r\n      emit('progress', event)\r\n    }\r\n  }\r\n\r\n\r\n  // dispatching requests\r\n  hosts.forEach(host => {\r\n    // would introcduce babel later\r\n    const req = request(Object.assign({}, config, {\r\n      method,\r\n      url: url.replace('{host}', host.ip),\r\n    }))\r\n    host.abortRequest = req.abort\r\n\r\n    req\r\n      .on('progress', handleProgress(host))\r\n      .then(response => {\r\n        // avoiding multiple resolves\r\n        if( ! championHost) setChampion(host)\r\n        if(host === championHost) resolve(response)\r\n      })\r\n      .catch(err => {\r\n        // console.log('Host err', err)\r\n        host.rejected = true\r\n\r\n        if(host === championHost) {\r\n          // trying other requests that didn't fail\r\n          const possibleIps = hosts\r\n                                .filter(hostWorthTrying)\r\n                                .map(host => host.ip)\r\n\r\n\r\n          requestAny(method, url, possibleIps, config)\r\n            .on('progress', done => emit('progress', done))\r\n            .on('new-champion', ip => emit('new-champion', ip))\r\n            .then(resolve)\r\n            .catch(err => {\r\n              reject(new Error('casperapi: All hosts are unreachable'))\r\n            })\r\n        } else if(hosts.filter(hostWorthTrying).length === 0) {\r\n          reject(new Error('casperapi: All hosts are unreachable'))\r\n        }\r\n      })\r\n  })\r\n})\r\n\r\n\r\nmodule.exports = requestAny\r\n","const A = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\nconst bs58 = {}\r\n\r\nbs58.encode = B => {\r\n  let d = [],   //the array for storing the stream of base58 digits\r\n      s = \"\",   //the result string variable that will be returned\r\n      i,        //the iterator variable for the byte input\r\n      j,        //the iterator variable for the base58 digit array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current base58 digit to the next base58 digit\r\n      n;        //a temporary placeholder variable for the current base58 digit\r\n  for(i in B) { //loop through each byte in the input stream\r\n      j = 0,                           //reset the base58 digit iterator\r\n      c = B[i];                        //set the initial carry amount equal to the current byte amount\r\n      s += c || s.length ^ i ? \"\" : 1; //prepend the result string with a \"1\" (0 in base58) if the byte stream is zero and non-zero bytes haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {             //start looping through the digits until there are no more digits and no carry amount\r\n          n = d[j];                    //set the placeholder for the current base58 digit\r\n          n = n ? n * 256 + c : c;     //shift the current base58 one byte and add the carry amount (or just add the carry amount if this is a new digit)\r\n          c = n / 58 | 0;              //find the new carry amount (floored integer of current digit divided by 58)\r\n          d[j] = n % 58;               //reset the current base58 digit to the remainder (the carry amount will pass on the overflow)\r\n          j++                          //iterate to the next base58 digit\r\n      }\r\n  }\r\n  while(j--)        //since the base58 digits are backwards, loop through them in reverse order\r\n      s += A[d[j]]; //lookup the character associated with each base58 digit\r\n  return s          //return the final base58 string\r\n}\r\n\r\n\r\nbs58.decode = S => {\r\n  let d = [],   //the array for storing the stream of decoded bytes\r\n      b = [],   //the result byte array that will be returned\r\n      i,        //the iterator variable for the base58 string\r\n      j,        //the iterator variable for the byte array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current byte to the next byte\r\n      n;        //a temporary placeholder variable for the current byte\r\n  for(i in S) { //loop through each base58 character in the input string\r\n      j = 0,                             //reset the byte iterator\r\n      c = A.indexOf( S[i] );             //set the initial carry amount equal to the current base58 digit\r\n      c || b.length ^ i ? i : b.push(0); //prepend the result array with a zero if the base58 digit is zero and non-zero characters haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {               //start looping through the bytes until there are no more bytes and no carry amount\r\n          n = d[j];                      //set the placeholder for the current byte\r\n          n = n ? n * 58 + c : c;        //shift the current byte 58 units and add the carry amount (or just add the carry amount if this is a new byte)\r\n          c = n >> 8;                    //find the new carry amount (1-byte shift of current byte value)\r\n          d[j] = n % 256;                //reset the current byte to the remainder (the carry amount will pass on the overflow)\r\n          j++                            //iterate to the next byte\r\n      }\r\n  }\r\n  while(j--)               //since the byte array is backwards, loop through it in reverse order\r\n      b.push( d[j] );      //append each byte to the result\r\n  return new Uint8Array(b) //return the final byte array in Uint8Array format\r\n}\r\n\r\nmodule.exports = bs58","stream = require('stream')\r\ngetStreamLength = require('stream-length')\r\n\r\n\r\nconst isFile = file => ( file instanceof Buffer\r\n                      || file instanceof stream.Readable\r\n)\r\n\r\nconst getFileSize = file => {\r\n  if(file instanceof stream.Readable) return getStreamLength(file)\r\n  if(file instanceof Buffer) return new Promise((resolve => resolve(file.byteLength)))\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  isFile,\r\n  getFileSize\r\n}","const sha256 = require('js-sha256')\r\nconst bs58 = require('./crypto/bs58')\r\nconst { isFile, getFileSize } = require('./file')\r\n\r\n\r\nconst parseSCString = hash => {\r\n  const val = hash.substring(2)\r\n  const codes = []\r\n\r\n  for(let i=0; i < val.length; i += 2) {\r\n    codes.push(parseInt(val.substr(i, 2), 16))\r\n  }\r\n\r\n  return String.fromCharCode.apply(0, codes.filter(code => code !== 0))\r\n}\r\n\r\n\r\nconst uuidToHash = uuid => {\r\n  const bytes = bs58.decode(uuid)\r\n  const sha = sha256.array(bytes)\r\n  \r\n  const encoded = new Uint8Array([18, sha.length].concat(sha)) \r\n  const hash = bs58.encode(encoded)\r\n\r\n  return hash\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  parseSCString,\r\n  isFile,\r\n  getFileSize,\r\n  uuidToHash\r\n}","module.exports = require(\"fs\");","module.exports = require(\"js-sha256\");","module.exports = require(\"request\");","module.exports = require(\"stream\");","module.exports = require(\"stream-length\");"],"sourceRoot":""}