{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eth/sc.js","webpack:///./src/index.js","webpack:///./src/promise.js","webpack:///./src/requestAdapter/node.js","webpack:///./src/requestAny.js","webpack:///./src/utils/crypto/bs58.js","webpack:///./src/utils/file/node.js","webpack:///./src/utils/utils.js","webpack:///external \"fs\"","webpack:///external \"js-sha256\"","webpack:///external \"request\"","webpack:///external \"stream\"","webpack:///external \"stream-length\""],"names":["parseSCString","uuidToHash","require","SC_INTERFACE","SC_ADDR","sc","ensureSC","eth","Contract","getUploadNodes","fileSize","Promise","resolve","reject","methods","getPeers","call","then","data","ids","Object","keys","filter","key","startsWith","map","all","node","getIpPort","ipPorts","ipPort","replace","catch","err","console","error","getStoringNodes","uuid","fileHash","showStoringPeers","nodeHashes","hash","test","s","substring","length","module","exports","scEth","CasperPromise","requestAny","utils","REST_PORT","Casper","constructor","api","mode","blockchain","blockchainAPI","save","file","emit","isFile","TypeError","getFileSize","ips","method","url","on","event","ip","JSON","parse","UUID","delete","getFile","encoding","getLink","sharingNode","path","cb","subscribers","push","message","forEach","realResolve","realReject","hijackControls","p","bind","request","Duplex","fs","makeRequest","headers","triggerAbort","promise","requestConfig","formData","req","response","uploaded","total","form","maxDataSize","Infinity","append","getLength","chunk","downloaded","res","abort","hostWorthTrying","host","rejected","canceled","config","Error","hosts","abortRequest","championHost","setChampion","handleProgress","progressHost","assign","possibleIps","done","A","bs58","encode","B","d","i","j","c","n","decode","S","b","indexOf","undefined","Uint8Array","stream","getStreamLength","Buffer","Readable","byteLength","sha256","val","codes","parseInt","substr","String","fromCharCode","apply","code","bytes","sha","array","encoded","concat"],"mappings":"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","file":"casper.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { parseSCString, uuidToHash } = require('../utils')\r\n\r\n\r\nconst SC_INTERFACE = require('./sc.abi.json')\r\nconst SC_ADDR = 'Cb4d87043e63EB3F7B605f79906911C498A31B33'\r\nlet sc\r\nconst ensureSC = eth => { if( ! sc) sc = new eth.Contract(SC_INTERFACE, SC_ADDR) }\r\n\r\n\r\nconst getUploadNodes = (eth, { fileSize }) => new Promise((resolve, reject) => {\r\n  ensureSC(eth)\r\n\r\n  sc.methods.getPeers(fileSize).call()\r\n    .then(data => {\r\n      const ids = Object.keys(data)\r\n                    .filter(key => key.startsWith('id'))\r\n                    .map(key => data[key])\r\n\r\n      return Promise.all(\r\n        ids.map(node => sc.methods.getIpPort(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort.replace(/:.*/, '')))\r\n    .then(resolve)\r\n    .catch(err => console.error(err))\r\n})\r\n\r\n\r\nconst getStoringNodes = (eth, { uuid }) => new Promise((resolve, reject) => {\r\n  ensureSC(eth)\r\n\r\n\r\n  const fileHash = uuidToHash(uuid)\r\n  sc.methods.showStoringPeers(fileHash).call()\r\n    .then(data => {\r\n      const nodeHashes = data.filter(hash => !/^0x0*$/.test(hash))\r\n                             .map(s => s.substring(0, s.length - 2))\r\n                             .map(parseSCString)\r\n\r\n      return Promise.all(\r\n        nodeHashes.map(node => sc.methods.getIpPort(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort.replace(/:.*/, '')))\r\n    .then(resolve)\r\n    .catch(err => console.error(err))\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","// we use commonsjs for node export\r\nconst scEth = require('./eth/sc')\r\nconst CasperPromise = require('./promise')\r\nconst requestAny = require('./requestAny')\r\nconst utils = require('./utils')\r\n\r\n\r\nconst REST_PORT = 5001\r\nconst sc = {\r\n  eth: scEth\r\n}\r\n\r\n\r\nclass Casper {\r\n  constructor(api, mode) {\r\n    // Later we will add more blockchains and use autodetection, etherium is default mode \r\n    this.blockchain = mode || 'eth'\r\n    if(this.blockchain === 'eth') this.blockchainAPI = api.eth || api\r\n  }\r\n\r\n  /**\r\n   * Writes file into casper storage.\r\n   * If uuid is present file is overwritten\r\n   * @param {(Blob | Buffer | stream.Readable)} file \r\n   * @param {String} uuid file's unique id (from previous upload)\r\n   * @return {CasperPromise} resolves with uuid\r\n   */\r\n  save(file, uuid = false) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      if( ! utils.isFile(file)) {\r\n        throw new TypeError('casperapi: file type must be File | Blob | ArrayBuffer | Buffer')\r\n      }\r\n\r\n      utils.getFileSize(file)\r\n        .then(fileSize => {\r\n          return sc[this.blockchain].getUploadNodes(this.blockchainAPI, { fileSize })\r\n        })\r\n        .then(ips => {\r\n          emit('sc-connected')         \r\n          let method, url\r\n          if(uuid) {\r\n            // Update\r\n            method = 'PUT'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`\r\n          } else {\r\n            // Save new\r\n            method = 'POST'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file`\r\n          }\r\n\r\n          requestAny(method, url, ips, { file })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(data => {\r\n              resolve(JSON.parse(data).UUID)\r\n            })\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Deletes file from casper storage.  \r\n   * @param {String} uuid file's unique id (returned from upload)\r\n   * @return {CasperPromise} resolves with void\r\n   */\r\n  delete(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('DELETE', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips)\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets file from casper storage.\r\n   * @param {String} uuid file's unique id (from upload)\r\n   * @return {CasperPromise} resolves with Blob | Buffer, after the whole file is downloaded\r\n   */\r\n  getFile(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          return ips\r\n        })\r\n        .then(ips => {\r\n          requestAny('GET', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips, { encoding: null })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates http link that allows to work with file the usual web way\r\n   * @param {String} uuid file's unique id (from upload)\r\n   */\r\n  getLink(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      let sharingNode = ''\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('POST', `http://{host}:${REST_PORT}/casper/v0/share/${uuid}`, ips)\r\n            .on('new-champion', ip => sharingNode = ip)\r\n            .then(path => resolve(\r\n              `http://${sharingNode}:${REST_PORT}${path}`\r\n            ))\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = Casper","function on(event, cb) {\r\n  if(!this.subscribers[event]) this.subscribers[event] = []\r\n  this.subscribers[event].push(cb)\r\n  return this\r\n}\r\n\r\n\r\nfunction emit(event, message) {\r\n  if(this.subscribers[event]) this.subscribers[event].forEach(cb => cb(message))\r\n}\r\n\r\n\r\nfunction CasperPromise(cb) {\r\n  let realResolve\r\n  let realReject\r\n\r\n  const hijackControls = (resolve, reject) => {\r\n    realResolve = resolve\r\n    realReject = reject\r\n  }\r\n\r\n  let p = new Promise(hijackControls)\r\n\r\n  p.subscribers = {}\r\n  p.emit = emit.bind(p)\r\n  p.on = on.bind(p)\r\n\r\n  cb(realResolve, realReject, p.emit)\r\n  return p\r\n}\r\n\r\nmodule.exports = CasperPromise","const request = require('request')\r\nconst Duplex = require('stream').Duplex\r\nconst CasperPromise = require('../promise')\r\nconst fs = require('fs')\r\n\r\n\r\nconst makeRequest = ({\r\n  method = 'GET',\r\n  url,\r\n  data = {},\r\n  file,\r\n  headers,\r\n  encoding\r\n}) => {\r\n  let triggerAbort\r\n\r\n  const promise = CasperPromise((resolve, reject, emit) => {\r\n    // preparation\r\n    const requestConfig = {\r\n      method,\r\n      url,\r\n      headers,\r\n      encoding: null,\r\n      formData: data\r\n    }\r\n\r\n    // dispatching request\r\n    const req = request(requestConfig, (err, response, data) => {\r\n      if(err) {\r\n        return reject(err)\r\n      }\r\n      resolve(data)\r\n    })\r\n\r\n    if(file) {\r\n      // upload progress\r\n      let uploaded = 0\r\n      let total = 0\r\n  \r\n      const form = req.form()\r\n      form.maxDataSize = Infinity\r\n      form.append('file', file)\r\n      \r\n      form.getLength((err, length) => { total = length })\r\n      form.on('data', chunk => {\r\n        // this is form read progress but for fs.createReadStream it's realistic as http reads this in chunks\r\n        uploaded += chunk.length\r\n        if(total) emit('progress', uploaded / total)\r\n      })\r\n    } else {\r\n      // download progress\r\n      let total = 0\r\n      let downloaded = 0\r\n      req.on('response', res => {\r\n        total = res.headers['x-content-length']\r\n      })\r\n  \r\n      req.on('data', chunk => {\r\n        downloaded += chunk.length\r\n        if(total) emit('progress', downloaded / total)\r\n      })\r\n    }\r\n\r\n\r\n    // providing abort feature\r\n    triggerAbort = req.abort.bind(req)\r\n  })\r\n\r\n  promise.abort = triggerAbort\r\n  return promise\r\n}\r\n\r\n\r\nmodule.exports = makeRequest","const request = require('./requestAdapter')\r\nconst CasperPromise = require('./promise')\r\n\r\n\r\nconst hostWorthTrying = host => ( ! host.rejected) || host.canceled\r\n\r\n\r\nconst requestAny = (\r\n  method, url, \r\n  ips, \r\n  config = {}\r\n) => CasperPromise((resolve, reject, emit) => {\r\n  ips = ips.filter(ip => ip !== '0.0.0.0')\r\n  if(ips.length === 0) reject(new Error('casperapi: No hosts to handle request'))\r\n\r\n  // preparation\r\n  const hosts = ips.map(ip => ({\r\n    ip,\r\n    rejected: false,\r\n    canceled: false,\r\n    abortRequest: null\r\n  }))\r\n  \r\n  let championHost = ''\r\n  \r\n  const setChampion = host => {\r\n    championHost = host\r\n    emit('new-champion', host.ip)\r\n  }\r\n\r\n  const handleProgress = progressHost => event => {\r\n    if( ! championHost) setChampion(progressHost)\r\n    \r\n    hosts\r\n      .filter(host => host !== championHost)\r\n      .map(host => host.abortRequest())\r\n    \r\n    if(progressHost === championHost) {\r\n      emit('progress', event)\r\n    }\r\n  }\r\n\r\n\r\n  // dispatching requests\r\n  hosts.forEach(host => {\r\n    // would introcduce babel later\r\n    const req = request(Object.assign({}, config, {\r\n      method,\r\n      url: url.replace('{host}', host.ip),\r\n    }))\r\n    host.abortRequest = req.abort\r\n\r\n    req\r\n      .on('progress', handleProgress(host))\r\n      .then(response => {\r\n        // avoiding multiple resolves\r\n        if( ! championHost) setChampion(host)\r\n        if(host === championHost) resolve(response)\r\n      })\r\n      .catch(err => {\r\n        // console.log('Host err', err)\r\n        host.rejected = true\r\n\r\n        if(host === championHost) {\r\n          // trying other requests that didn't fail\r\n          const possibleIps = hosts\r\n                                .filter(hostWorthTrying)\r\n                                .map(host => host.ip)\r\n          \r\n\r\n          requestAny(method, url, possibleIps, config)\r\n            .on('progress', done => emit('progress', done))\r\n            .on('new-champion', ip => emit('new-champion', ip))\r\n            .then(resolve)\r\n            .catch(err => {\r\n              reject(new Error('casperapi: All hosts are unreachable'))\r\n            })\r\n        } else if(hosts.filter(hostWorthTrying).length === 0) {\r\n          reject(new Error('casperapi: All hosts are unreachable'))\r\n        }\r\n      })\r\n  })\r\n})\r\n\r\n\r\nmodule.exports = requestAny","const A = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\nconst bs58 = {}\r\n\r\nbs58.encode = B => {\r\n  let d = [],   //the array for storing the stream of base58 digits\r\n      s = \"\",   //the result string variable that will be returned\r\n      i,        //the iterator variable for the byte input\r\n      j,        //the iterator variable for the base58 digit array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current base58 digit to the next base58 digit\r\n      n;        //a temporary placeholder variable for the current base58 digit\r\n  for(i in B) { //loop through each byte in the input stream\r\n      j = 0,                           //reset the base58 digit iterator\r\n      c = B[i];                        //set the initial carry amount equal to the current byte amount\r\n      s += c || s.length ^ i ? \"\" : 1; //prepend the result string with a \"1\" (0 in base58) if the byte stream is zero and non-zero bytes haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {             //start looping through the digits until there are no more digits and no carry amount\r\n          n = d[j];                    //set the placeholder for the current base58 digit\r\n          n = n ? n * 256 + c : c;     //shift the current base58 one byte and add the carry amount (or just add the carry amount if this is a new digit)\r\n          c = n / 58 | 0;              //find the new carry amount (floored integer of current digit divided by 58)\r\n          d[j] = n % 58;               //reset the current base58 digit to the remainder (the carry amount will pass on the overflow)\r\n          j++                          //iterate to the next base58 digit\r\n      }\r\n  }\r\n  while(j--)        //since the base58 digits are backwards, loop through them in reverse order\r\n      s += A[d[j]]; //lookup the character associated with each base58 digit\r\n  return s          //return the final base58 string\r\n}\r\n\r\n\r\nbs58.decode = S => {\r\n  let d = [],   //the array for storing the stream of decoded bytes\r\n      b = [],   //the result byte array that will be returned\r\n      i,        //the iterator variable for the base58 string\r\n      j,        //the iterator variable for the byte array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current byte to the next byte\r\n      n;        //a temporary placeholder variable for the current byte\r\n  for(i in S) { //loop through each base58 character in the input string\r\n      j = 0,                             //reset the byte iterator\r\n      c = A.indexOf( S[i] );             //set the initial carry amount equal to the current base58 digit\r\n      if(c < 0)                          //see if the base58 digit lookup is invalid (-1)\r\n          return undefined;              //if invalid base58 digit, bail out and return undefined\r\n      c || b.length ^ i ? i : b.push(0); //prepend the result array with a zero if the base58 digit is zero and non-zero characters haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {               //start looping through the bytes until there are no more bytes and no carry amount\r\n          n = d[j];                      //set the placeholder for the current byte\r\n          n = n ? n * 58 + c : c;        //shift the current byte 58 units and add the carry amount (or just add the carry amount if this is a new byte)\r\n          c = n >> 8;                    //find the new carry amount (1-byte shift of current byte value)\r\n          d[j] = n % 256;                //reset the current byte to the remainder (the carry amount will pass on the overflow)\r\n          j++                            //iterate to the next byte\r\n      }\r\n  }\r\n  while(j--)               //since the byte array is backwards, loop through it in reverse order\r\n      b.push( d[j] );      //append each byte to the result\r\n  return new Uint8Array(b) //return the final byte array in Uint8Array format\r\n}\r\n\r\nmodule.exports = bs58","stream = require('stream')\r\ngetStreamLength = require('stream-length')\r\n\r\n\r\nconst isFile = file => ( file instanceof Buffer\r\n                      || file instanceof stream.Readable\r\n)\r\n\r\nconst getFileSize = file => new Promise((resolve, reject) => {\r\n  if(file instanceof stream.Readable) return getStreamLength(file).then(resolve)\r\n  if(file instanceof Buffer) return resolve(file.byteLength)\r\n\r\n  reject(new Error('casperapi: Cannot compute file size'))\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  isFile,\r\n  getFileSize\r\n}","const sha256 = require('js-sha256')\r\nconst bs58 = require('./crypto/bs58')\r\nconst { isFile, getFileSize } = require('./file')\r\n\r\n\r\nconst parseSCString = hash => {\r\n  const val = hash.substring(2)\r\n  const codes = []\r\n\r\n  for(let i=0; i < val.length; i += 2) {\r\n    codes.push(parseInt(val.substr(i, 2), 16))\r\n  }\r\n\r\n  return String.fromCharCode.apply(0, codes.filter(code => code !== 0))\r\n}\r\n\r\n\r\nconst uuidToHash = uuid => {\r\n  const bytes = bs58.decode(uuid)\r\n  const sha = sha256.array(bytes)\r\n  \r\n  const encoded = new Uint8Array([18, sha.length].concat(sha)) \r\n  const hash = bs58.encode(encoded)\r\n\r\n  return hash\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  parseSCString,\r\n  isFile,\r\n  getFileSize,\r\n  uuidToHash\r\n}","module.exports = require(\"fs\");","module.exports = require(\"js-sha256\");","module.exports = require(\"request\");","module.exports = require(\"stream\");","module.exports = require(\"stream-length\");"],"sourceRoot":""}