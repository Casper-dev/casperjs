{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eth/sc.js","webpack:///./src/index.js","webpack:///./src/promise.js","webpack:///./src/requestAdapter/node.js","webpack:///./src/requestAny.js","webpack:///./src/utils/crypto/bs58.js","webpack:///./src/utils/file/node.js","webpack:///./src/utils/utils.js","webpack:///external \"buffer-to-stream\"","webpack:///external \"fs\"","webpack:///external \"js-sha256\"","webpack:///external \"request\"","webpack:///external \"stream\"","webpack:///external \"stream-length\""],"names":["parseSCString","uuidToHash","require","SC_INTERFACE","SC_ADDR","development","production","sc","getSC","eth","mode","pair","Contract","push","getUploadNodes","fileSize","Promise","resolve","reject","entropy","Math","round","random","methods","getPeers","call","then","data","hashes","Object","values","all","map","hash","getNodeAddr","ipPort","ip","replace","ipfs","catch","nodes","filter","node","getStoringNodes","uuid","fileHash","showStoringPeers","nodeHashes","ipPorts","module","exports","scEth","CasperPromise","requestAny","utils","REST_PORT","Casper","constructor","api","blockchain","blockchainAPI","save","file","emit","isFile","TypeError","getFileSize","ips","x","peers","headers","JSON","stringify","method","url","on","event","parse","UUID","delete","getFile","encoding","getLink","sharingNode","path","cb","subscribers","message","forEach","realResolve","realReject","hijackControls","p","bind","request","Duplex","fs","toStream","makeRequest","triggerAbort","promise","requestConfig","formData","req","err","response","uploaded","total","filesize","undefined","Buffer","byteLength","form","maxDataSize","Infinity","append","knownLength","getLength","length","chunk","downloaded","res","abort","hostWorthTrying","host","rejected","canceled","config","Error","hosts","abortRequest","championHost","setChampion","handleProgress","progressHost","assign","possibleIps","done","A","bs58","decode","S","d","b","i","j","c","n","indexOf","Uint8Array","stream","getStreamLength","Readable","sha256","val","substring","codes","parseInt","substr","String","fromCharCode","apply","code","bytes","sha"],"mappings":"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","file":"casper.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const { parseSCString, uuidToHash } = require('../utils')\r\n\r\nconst SC_INTERFACE = require('./sc.abi.json')\r\nconst SC_ADDR = {\r\n  development: '70956945E53886f71c7dd8c1543e155d5e069a1A',\r\n  production:  'ff89Eb252F1E9C6638823C819DC0b2Ce3bFae7F5'\r\n}\r\nconst sc = {\r\n  development: [],\r\n  production: []\r\n}\r\nconst getSC = (eth, mode) => {\r\n  // initiing casper-sc is somewhat pricy, so we try to get it from cache\r\n  for(let pair of sc[mode]) {\r\n    if(pair.eth === eth) return pair.sc\r\n  }\r\n\r\n  // conneced to another web3 instance or created for the first time\r\n  const pair = { eth, sc: new eth.Contract(SC_INTERFACE, SC_ADDR[mode]) }\r\n  sc[mode].push(pair)\r\n\r\n  return pair.sc\r\n}\r\n\r\n\r\nconst getUploadNodes = (eth, { fileSize, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n  const entropy = Math.round(Math.random() * 100000)\r\n\r\n  sc.methods.getPeers(fileSize, entropy).call()\r\n    .then(data => {\r\n      const hashes = Object.values(data)\r\n\r\n      return Promise.all(\r\n        hashes.map(hash => new Promise((resolve, reject) =>\r\n          sc.methods.getNodeAddr(hash)\r\n            .call()\r\n            .then(ipPort => resolve({\r\n              ip: ipPort[0].replace(/:.*/, ''), // removing thrift port\r\n              ipfs: ipPort[1],\r\n              hash\r\n            }))\r\n            .catch(reject)\r\n        ))\r\n      )\r\n    })\r\n    .then(nodes => nodes.filter(node => node.ip))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nconst getStoringNodes = (eth, { uuid, mode }) => new Promise((resolve, reject) => {\r\n  const sc = getSC(eth, mode)\r\n\r\n\r\n  const fileHash = uuidToHash(uuid)\r\n  sc.methods.showStoringPeers(fileHash).call()\r\n    .then(data => {\r\n      const nodeHashes = Object.values(data)\r\n\r\n      return Promise.all(\r\n        nodeHashes.map(node => sc.methods.getNodeAddr(node).call())\r\n      )\r\n    })\r\n    .then(ipPorts => ipPorts.filter(ipPort => ipPort[0]))\r\n    .then(ipPorts => ipPorts.map(ipPort => ipPort[0].replace(/:.*/, '')))\r\n    .then(resolve)\r\n})\r\n\r\n\r\nmodule.exports = {\r\n  getUploadNodes,\r\n  getStoringNodes\r\n}","// we use commonsjs for node export\r\nconst scEth = require('./eth/sc')\r\nconst CasperPromise = require('./promise')\r\nconst requestAny = require('./requestAny')\r\nconst utils = require('./utils')\r\n\r\n\r\nconst REST_PORT = 5001\r\nconst sc = {\r\n  eth: scEth\r\n}\r\n\r\n\r\nclass Casper {\r\n  constructor(api, { blockchain='eth', mode='development' } = {}) {\r\n    // Later we will add more blockchains and use autodetection, etherium is the default mode\r\n    this.blockchain = blockchain\r\n    this.mode = mode\r\n    if(this.blockchain === 'eth') this.blockchainAPI = api.eth || api\r\n  }\r\n\r\n  /**\r\n   * Writes file into casper storage.\r\n   * If uuid is present file is overwritten\r\n   * @param {(Blob | Buffer | stream.Readable)} file\r\n   * @param {String} uuid file's unique id (from previous upload)\r\n   * @return {CasperPromise} resolves with uuid\r\n   */\r\n  save(file, uuid = false) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      if( ! utils.isFile(file)) {\r\n        throw new TypeError('casperapi: file type must be File | Blob | Buffer | stream.Readable')\r\n      }\r\n\r\n      utils.getFileSize(file)\r\n        .then(fileSize => {\r\n          return sc[this.blockchain].getUploadNodes(this.blockchainAPI, { fileSize, mode: this.mode })\r\n        })\r\n        .then(nodes => {\r\n          emit('sc-connected')\r\n\r\n          const ips = nodes.map(x => x.ip)\r\n          const peers = nodes.map(x => `${x.ipfs}/ipfs/${x.hash}`)\r\n          const headers = {\r\n            'X-Peers': JSON.stringify(peers)\r\n          }\r\n\r\n          let method, url\r\n          if(uuid) {\r\n            // Update\r\n            method = 'PUT'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`\r\n          } else {\r\n            // Save new\r\n            method = 'POST'\r\n            url = `http://{host}:${REST_PORT}/casper/v0/file`\r\n          }\r\n\r\n          requestAny(method, url, ips, { file, headers })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(data => {\r\n              resolve(JSON.parse(data).UUID)\r\n            })\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Deletes file from casper storage.\r\n   * @param {String} uuid file's unique id (returned from upload)\r\n   * @return {CasperPromise} resolves with void\r\n   */\r\n  delete(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('DELETE', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips)\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets file from casper storage.\r\n   * @param {String} uuid file's unique id (from upload)\r\n   * @return {CasperPromise} resolves with Blob | Buffer, after the whole file is downloaded\r\n   */\r\n  getFile(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          return ips\r\n        })\r\n        .then(ips => {\r\n          requestAny('GET', `http://{host}:${REST_PORT}/casper/v0/file/${uuid}`, ips, { encoding: null })\r\n            .on('progress', event => emit('progress', event))\r\n            .on('new-champion', ip => emit('node-found', ip))\r\n            .then(resolve)\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates http link that allows to work with file the usual web way\r\n   * @param {String} uuid file's unique id (from upload)\r\n   */\r\n  getLink(uuid) {\r\n    return CasperPromise((resolve, reject, emit) => {\r\n      let sharingNode = ''\r\n      sc[this.blockchain]\r\n        .getStoringNodes(this.blockchainAPI, { uuid, mode: this.mode })\r\n        .then(ips => {\r\n          emit('sc-connected')\r\n          requestAny('POST', `http://{host}:${REST_PORT}/casper/v0/share/${uuid}`, ips)\r\n            .on('new-champion', ip => sharingNode = ip)\r\n            .then(path => resolve(\r\n              `http://${sharingNode}:${REST_PORT}${path}`\r\n            ))\r\n            .catch(reject)\r\n        })\r\n        .catch(reject)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = Casper\r\n","function on(event, cb) {\r\n  if(!this.subscribers[event]) this.subscribers[event] = []\r\n  this.subscribers[event].push(cb)\r\n  return this\r\n}\r\n\r\n\r\nfunction emit(event, message) {\r\n  if(this.subscribers[event]) this.subscribers[event].forEach(cb => cb(message))\r\n}\r\n\r\n\r\nfunction CasperPromise(cb) {\r\n  let realResolve\r\n  let realReject\r\n\r\n  const hijackControls = (resolve, reject) => {\r\n    realResolve = resolve\r\n    realReject = reject\r\n  }\r\n\r\n  let p = new Promise(hijackControls)\r\n\r\n  p.subscribers = {}\r\n  p.emit = emit.bind(p)\r\n  p.on = on.bind(p)\r\n\r\n  cb(realResolve, realReject, p.emit)\r\n  return p\r\n}\r\n\r\nmodule.exports = CasperPromise","const request = require('request')\r\nconst Duplex = require('stream').Duplex\r\nconst CasperPromise = require('../promise')\r\nconst fs = require('fs')\r\nconst toStream = require('buffer-to-stream')\r\n\r\nconst makeRequest = ({\r\n  method = 'GET',\r\n  url,\r\n  data = {},\r\n  file,\r\n  headers,\r\n  encoding\r\n}) => {\r\n  let triggerAbort\r\n\r\n  const promise = CasperPromise((resolve, reject, emit) => {\r\n    // preparation\r\n    const requestConfig = {\r\n      method,\r\n      url,\r\n      headers,\r\n      encoding: null,\r\n      formData: data\r\n    }\r\n\r\n    // dispatching request\r\n    const req = request(requestConfig, (err, response, data) => {\r\n      if(err) {\r\n        return reject(err)\r\n      }\r\n      resolve(data)\r\n    })\r\n\r\n    if(file) {\r\n      // upload progress\r\n      let uploaded = 0\r\n      let total = 0\r\n      let filesize = undefined\r\n      if(file instanceof Buffer) {\r\n        filesize = file.byteLength\r\n        file = toStream(file)\r\n      }\r\n  \r\n      const form = req.form()\r\n      form.maxDataSize = Infinity\r\n      form.append('file', file, {\r\n        knownLength: filesize\r\n      })\r\n      \r\n      form.getLength((err, length) => { total = length })\r\n      form.on('data', chunk => {\r\n        // this is form read progress but for fs.createReadStream it's realistic as http reads this in chunks\r\n        uploaded += chunk.length\r\n        if(total) emit('progress', uploaded / total)\r\n      })\r\n    } else {\r\n      // download progress\r\n      let total = 0\r\n      let downloaded = 0\r\n      req.on('response', res => {\r\n        total = res.headers['content-length']\r\n      })\r\n  \r\n      req.on('data', chunk => {\r\n        downloaded += chunk.length\r\n        if(total) emit('progress', downloaded / total)\r\n      })\r\n    }\r\n\r\n\r\n    // providing abort feature\r\n    triggerAbort = req.abort.bind(req)\r\n  })\r\n\r\n  promise.abort = triggerAbort\r\n  return promise\r\n}\r\n\r\n\r\nmodule.exports = makeRequest","const request = require('./requestAdapter')\r\nconst CasperPromise = require('./promise')\r\n\r\n\r\nconst hostWorthTrying = host => ( ! host.rejected) || host.canceled\r\n\r\n\r\nconst requestAny = (\r\n  method, url,\r\n  ips,\r\n  config = {}\r\n) => CasperPromise((resolve, reject, emit) => {\r\n  ips = ips.filter(ip => ip !== '0.0.0.0')\r\n  if(ips.length === 0) reject(new Error('casperapi: No hosts to handle request'))\r\n\r\n  // preparation\r\n  const hosts = ips.map(ip => ({\r\n    ip,\r\n    rejected: false,\r\n    canceled: false,\r\n    abortRequest: null\r\n  }))\r\n\r\n  let championHost = ''\r\n\r\n  const setChampion = host => {\r\n    championHost = host\r\n    emit('new-champion', host.ip)\r\n  }\r\n\r\n  const handleProgress = progressHost => event => {\r\n    if( ! championHost) setChampion(progressHost)\r\n\r\n    hosts\r\n      .filter(host => host !== championHost)\r\n      .map(host => host.abortRequest())\r\n\r\n    if(progressHost === championHost) {\r\n      emit('progress', event)\r\n    }\r\n  }\r\n\r\n\r\n  // dispatching requests\r\n  hosts.forEach(host => {\r\n    // would introcduce babel later\r\n    const req = request(Object.assign({}, config, {\r\n      method,\r\n      url: url.replace('{host}', host.ip),\r\n    }))\r\n    host.abortRequest = req.abort\r\n\r\n    req\r\n      .on('progress', handleProgress(host))\r\n      .then(response => {\r\n        // avoiding multiple resolves\r\n        if( ! championHost) setChampion(host)\r\n        if(host === championHost) resolve(response)\r\n      })\r\n      .catch(err => {\r\n        // console.log('Host err', err, host)\r\n        host.rejected = true\r\n\r\n        if(host === championHost) {\r\n          // trying other requests that didn't fail\r\n          const possibleIps = hosts\r\n                                .filter(hostWorthTrying)\r\n                                .map(host => host.ip)\r\n\r\n\r\n          requestAny(method, url, possibleIps, config)\r\n            .on('progress', done => emit('progress', done))\r\n            .on('new-champion', ip => emit('new-champion', ip))\r\n            .then(resolve)\r\n            .catch(err => {\r\n              reject(new Error('casperapi: All hosts are unreachable'))\r\n            })\r\n        } else if(hosts.filter(hostWorthTrying).length === 0) {\r\n          reject(new Error('casperapi: All hosts are unreachable'))\r\n        }\r\n      })\r\n  })\r\n})\r\n\r\n\r\nmodule.exports = requestAny\r\n","const A = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\nconst bs58 = {}\r\n\r\nbs58.decode = S => {\r\n  let d = [],   //the array for storing the stream of decoded bytes\r\n      b = [],   //the result byte array that will be returned\r\n      i,        //the iterator variable for the base58 string\r\n      j,        //the iterator variable for the byte array (d)\r\n      c,        //the carry amount variable that is used to overflow from the current byte to the next byte\r\n      n;        //a temporary placeholder variable for the current byte\r\n  for(i in S) { //loop through each base58 character in the input string\r\n      j = 0,                             //reset the byte iterator\r\n      c = A.indexOf( S[i] );             //set the initial carry amount equal to the current base58 digit\r\n      c || b.length ^ i ? i : b.push(0); //prepend the result array with a zero if the base58 digit is zero and non-zero characters haven't been seen yet (to ensure correct decode length)\r\n      while(j in d || c) {               //start looping through the bytes until there are no more bytes and no carry amount\r\n          n = d[j];                      //set the placeholder for the current byte\r\n          n = n ? n * 58 + c : c;        //shift the current byte 58 units and add the carry amount (or just add the carry amount if this is a new byte)\r\n          c = n >> 8;                    //find the new carry amount (1-byte shift of current byte value)\r\n          d[j] = n % 256;                //reset the current byte to the remainder (the carry amount will pass on the overflow)\r\n          j++                            //iterate to the next byte\r\n      }\r\n  }\r\n  while(j--)               //since the byte array is backwards, loop through it in reverse order\r\n      b.push( d[j] );      //append each byte to the result\r\n  return new Uint8Array(b) //return the final byte array in Uint8Array format\r\n}\r\n\r\n// bs58.encode = B => {\r\n//   let d = [],   //the array for storing the stream of base58 digits\r\n//       s = \"\",   //the result string variable that will be returned\r\n//       i,        //the iterator variable for the byte input\r\n//       j,        //the iterator variable for the base58 digit array (d)\r\n//       c,        //the carry amount variable that is used to overflow from the current base58 digit to the next base58 digit\r\n//       n;        //a temporary placeholder variable for the current base58 digit\r\n//   for(i in B) { //loop through each byte in the input stream\r\n//       j = 0,                           //reset the base58 digit iterator\r\n//       c = B[i];                        //set the initial carry amount equal to the current byte amount\r\n//       s += c || s.length ^ i ? \"\" : 1; //prepend the result string with a \"1\" (0 in base58) if the byte stream is zero and non-zero bytes haven't been seen yet (to ensure correct decode length)\r\n//       while(j in d || c) {             //start looping through the digits until there are no more digits and no carry amount\r\n//           n = d[j];                    //set the placeholder for the current base58 digit\r\n//           n = n ? n * 256 + c : c;     //shift the current base58 one byte and add the carry amount (or just add the carry amount if this is a new digit)\r\n//           c = n / 58 | 0;              //find the new carry amount (floored integer of current digit divided by 58)\r\n//           d[j] = n % 58;               //reset the current base58 digit to the remainder (the carry amount will pass on the overflow)\r\n//           j++                          //iterate to the next base58 digit\r\n//       }\r\n//   }\r\n//   while(j--)        //since the base58 digits are backwards, loop through them in reverse order\r\n//       s += A[d[j]]; //lookup the character associated with each base58 digit\r\n//   return s          //return the final base58 string\r\n// }\r\n\r\nmodule.exports = bs58","const stream = require('stream')\r\nconst getStreamLength = require('stream-length')\r\n\r\n\r\nconst isFile = file => ( file instanceof Buffer\r\n                      || file instanceof stream.Readable\r\n)\r\n\r\nconst getFileSize = file => {\r\n  if(file instanceof stream.Readable) return getStreamLength(file)\r\n  if(file instanceof Buffer) return new Promise((resolve => resolve(file.byteLength)))\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  isFile,\r\n  getFileSize\r\n}","const sha256 = require('js-sha256')\r\nconst bs58 = require('./crypto/bs58')\r\nconst { isFile, getFileSize } = require('./file')\r\n\r\nconst parseSCString = hash => {\r\n  const val = hash.substring(2)\r\n  const codes = []\r\n\r\n  for(let i=0; i < val.length; i += 2) {\r\n    codes.push(parseInt(val.substr(i, 2), 16))\r\n  }\r\n\r\n  return String.fromCharCode.apply(0, codes.filter(code => code !== 0))\r\n}\r\n\r\n\r\nconst uuidToHash = uuid => {\r\n  const bytes = bs58.decode(uuid)\r\n  const sha = sha256(bytes)\r\n  return '0x' + sha\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  parseSCString,\r\n  isFile,\r\n  getFileSize,\r\n  uuidToHash\r\n}","module.exports = require(\"buffer-to-stream\");","module.exports = require(\"fs\");","module.exports = require(\"js-sha256\");","module.exports = require(\"request\");","module.exports = require(\"stream\");","module.exports = require(\"stream-length\");"],"sourceRoot":""}